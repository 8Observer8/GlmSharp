using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Numerics;
using System.Linq;
using NUnit.Framework;
using GlmSharp;

// ReSharper disable InconsistentNaming

namespace GlmSharpTest.Generated.Vec3
{
    [TestFixture]
    public class ComplexVec3Test
    {

        [Test]
        public void Constructors()
        {
            {
                var v = new cvec3(new Complex(9, 4.5d));
                Assert.AreEqual(new Complex(9, 4.5d), v.x);
                Assert.AreEqual(new Complex(9, 4.5d), v.y);
                Assert.AreEqual(new Complex(9, 4.5d), v.z);
            }
            {
                var v = new cvec3(new Complex(7, -7), new Complex(-1.5d, 2), new Complex(-8, -8));
                Assert.AreEqual(new Complex(7, -7), v.x);
                Assert.AreEqual(new Complex(-1.5d, 2), v.y);
                Assert.AreEqual(new Complex(-8, -8), v.z);
            }
            {
                var v = new cvec3(new cvec2(new Complex(-4.5d, -6), new Complex(-5.5d, -2.5d)));
                Assert.AreEqual(new Complex(-4.5d, -6), v.x);
                Assert.AreEqual(new Complex(-5.5d, -2.5d), v.y);
                Assert.AreEqual(Complex.Zero, v.z);
            }
            {
                var v = new cvec3(new cvec3(new Complex(-2, 6.5d), new Complex(0.5d, -5), new Complex(-7.5d, 6.5d)));
                Assert.AreEqual(new Complex(-2, 6.5d), v.x);
                Assert.AreEqual(new Complex(0.5d, -5), v.y);
                Assert.AreEqual(new Complex(-7.5d, 6.5d), v.z);
            }
            {
                var v = new cvec3(new cvec4(new Complex(-6, -7.5d), new Complex(-7, -6), new Complex(-3, -2), new Complex(-9, -2)));
                Assert.AreEqual(new Complex(-6, -7.5d), v.x);
                Assert.AreEqual(new Complex(-7, -6), v.y);
                Assert.AreEqual(new Complex(-3, -2), v.z);
            }
        }

        [Test]
        public void Indexer()
        {
            var v = new cvec3(new Complex(9, 8), new Complex(0.5d, -1.5d), new Complex(3, -8));
            Assert.AreEqual(new Complex(9, 8), v[0]);
            Assert.AreEqual(new Complex(0.5d, -1.5d), v[1]);
            Assert.AreEqual(new Complex(3, -8), v[2]);
            
            Assert.Throws<ArgumentOutOfRangeException>(() => { var s = v[-2147483648]; } );
            Assert.Throws<ArgumentOutOfRangeException>(() => { v[-2147483648] = Complex.Zero; } );
            Assert.Throws<ArgumentOutOfRangeException>(() => { var s = v[-1]; } );
            Assert.Throws<ArgumentOutOfRangeException>(() => { v[-1] = Complex.Zero; } );
            Assert.Throws<ArgumentOutOfRangeException>(() => { var s = v[3]; } );
            Assert.Throws<ArgumentOutOfRangeException>(() => { v[3] = Complex.Zero; } );
            Assert.Throws<ArgumentOutOfRangeException>(() => { var s = v[2147483647]; } );
            Assert.Throws<ArgumentOutOfRangeException>(() => { v[2147483647] = Complex.Zero; } );
            Assert.Throws<ArgumentOutOfRangeException>(() => { var s = v[5]; } );
            Assert.Throws<ArgumentOutOfRangeException>(() => { v[5] = Complex.Zero; } );
            
            v[0] = Complex.Zero;
            Assert.AreEqual(Complex.Zero, v[0]);
            v[1] = Complex.One;
            Assert.AreEqual(Complex.One, v[1]);
            v[0] = new Complex(0.0, 0.0);
            Assert.AreEqual(new Complex(0.0, 0.0), v[0]);
            v[2] = new Complex(0.0, 1.0);
            Assert.AreEqual(new Complex(0.0, 1.0), v[2]);
            v[2] = new Complex(0.0, 2);
            Assert.AreEqual(new Complex(0.0, 2), v[2]);
            v[0] = new Complex(0.0, 3);
            Assert.AreEqual(new Complex(0.0, 3), v[0]);
            v[0] = new Complex(0.0, 4);
            Assert.AreEqual(new Complex(0.0, 4), v[0]);
            v[0] = new Complex(0.0, 5);
            Assert.AreEqual(new Complex(0.0, 5), v[0]);
            v[2] = new Complex(0.0, 6);
            Assert.AreEqual(new Complex(0.0, 6), v[2]);
            v[1] = new Complex(0.0, 7);
            Assert.AreEqual(new Complex(0.0, 7), v[1]);
            v[1] = new Complex(0.0, 8);
            Assert.AreEqual(new Complex(0.0, 8), v[1]);
            v[2] = new Complex(0.0, 9);
            Assert.AreEqual(new Complex(0.0, 9), v[2]);
            v[2] = new Complex(0.0, -1);
            Assert.AreEqual(new Complex(0.0, -1), v[2]);
            v[0] = new Complex(0.0, -2);
            Assert.AreEqual(new Complex(0.0, -2), v[0]);
            v[1] = new Complex(0.0, -3);
            Assert.AreEqual(new Complex(0.0, -3), v[1]);
            v[2] = new Complex(0.0, -4);
            Assert.AreEqual(new Complex(0.0, -4), v[2]);
            v[1] = new Complex(0.0, -5);
            Assert.AreEqual(new Complex(0.0, -5), v[1]);
            v[0] = new Complex(0.0, -6);
            Assert.AreEqual(new Complex(0.0, -6), v[0]);
            v[0] = new Complex(0.0, -7);
            Assert.AreEqual(new Complex(0.0, -7), v[0]);
            v[0] = new Complex(0.0, -8);
            Assert.AreEqual(new Complex(0.0, -8), v[0]);
            v[1] = new Complex(0.0, -9);
            Assert.AreEqual(new Complex(0.0, -9), v[1]);
            v[0] = new Complex(0.0, -9.5d);
            Assert.AreEqual(new Complex(0.0, -9.5d), v[0]);
            v[1] = new Complex(0.0, -8.5d);
            Assert.AreEqual(new Complex(0.0, -8.5d), v[1]);
            v[0] = new Complex(0.0, -7.5d);
            Assert.AreEqual(new Complex(0.0, -7.5d), v[0]);
            v[2] = new Complex(0.0, -6.5d);
            Assert.AreEqual(new Complex(0.0, -6.5d), v[2]);
            v[1] = new Complex(0.0, -5.5d);
            Assert.AreEqual(new Complex(0.0, -5.5d), v[1]);
            v[2] = new Complex(0.0, -4.5d);
            Assert.AreEqual(new Complex(0.0, -4.5d), v[2]);
            v[1] = new Complex(0.0, -3.5d);
            Assert.AreEqual(new Complex(0.0, -3.5d), v[1]);
            v[2] = new Complex(0.0, -2.5d);
            Assert.AreEqual(new Complex(0.0, -2.5d), v[2]);
            v[0] = new Complex(0.0, -1.5d);
            Assert.AreEqual(new Complex(0.0, -1.5d), v[0]);
            v[1] = new Complex(0.0, -0.5d);
            Assert.AreEqual(new Complex(0.0, -0.5d), v[1]);
            v[0] = new Complex(0.0, 0.5d);
            Assert.AreEqual(new Complex(0.0, 0.5d), v[0]);
            v[2] = new Complex(0.0, 1.5d);
            Assert.AreEqual(new Complex(0.0, 1.5d), v[2]);
            v[2] = new Complex(0.0, 2.5d);
            Assert.AreEqual(new Complex(0.0, 2.5d), v[2]);
            v[2] = new Complex(0.0, 3.5d);
            Assert.AreEqual(new Complex(0.0, 3.5d), v[2]);
            v[0] = new Complex(0.0, 4.5d);
            Assert.AreEqual(new Complex(0.0, 4.5d), v[0]);
            v[2] = new Complex(0.0, 5.5d);
            Assert.AreEqual(new Complex(0.0, 5.5d), v[2]);
            v[0] = new Complex(0.0, 6.5d);
            Assert.AreEqual(new Complex(0.0, 6.5d), v[0]);
            v[2] = new Complex(0.0, 7.5d);
            Assert.AreEqual(new Complex(0.0, 7.5d), v[2]);
            v[0] = new Complex(0.0, 8.5d);
            Assert.AreEqual(new Complex(0.0, 8.5d), v[0]);
            v[0] = new Complex(0.0, 9.5d);
            Assert.AreEqual(new Complex(0.0, 9.5d), v[0]);
            v[2] = new Complex(1.0, 0.0);
            Assert.AreEqual(new Complex(1.0, 0.0), v[2]);
            v[0] = new Complex(1.0, 1.0);
            Assert.AreEqual(new Complex(1.0, 1.0), v[0]);
            v[1] = new Complex(1.0, 2);
            Assert.AreEqual(new Complex(1.0, 2), v[1]);
            v[1] = new Complex(1.0, 3);
            Assert.AreEqual(new Complex(1.0, 3), v[1]);
            v[1] = new Complex(1.0, 4);
            Assert.AreEqual(new Complex(1.0, 4), v[1]);
            v[2] = new Complex(1.0, 5);
            Assert.AreEqual(new Complex(1.0, 5), v[2]);
            v[1] = new Complex(1.0, 6);
            Assert.AreEqual(new Complex(1.0, 6), v[1]);
            v[2] = new Complex(1.0, 7);
            Assert.AreEqual(new Complex(1.0, 7), v[2]);
            v[1] = new Complex(1.0, 8);
            Assert.AreEqual(new Complex(1.0, 8), v[1]);
            v[1] = new Complex(1.0, 9);
            Assert.AreEqual(new Complex(1.0, 9), v[1]);
            v[2] = new Complex(1.0, -1);
            Assert.AreEqual(new Complex(1.0, -1), v[2]);
            v[0] = new Complex(1.0, -2);
            Assert.AreEqual(new Complex(1.0, -2), v[0]);
            v[2] = new Complex(1.0, -3);
            Assert.AreEqual(new Complex(1.0, -3), v[2]);
            v[1] = new Complex(1.0, -4);
            Assert.AreEqual(new Complex(1.0, -4), v[1]);
            v[0] = new Complex(1.0, -5);
            Assert.AreEqual(new Complex(1.0, -5), v[0]);
            v[2] = new Complex(1.0, -6);
            Assert.AreEqual(new Complex(1.0, -6), v[2]);
            v[2] = new Complex(1.0, -7);
            Assert.AreEqual(new Complex(1.0, -7), v[2]);
            v[0] = new Complex(1.0, -8);
            Assert.AreEqual(new Complex(1.0, -8), v[0]);
            v[0] = new Complex(1.0, -9);
            Assert.AreEqual(new Complex(1.0, -9), v[0]);
            v[1] = new Complex(1.0, -9.5d);
            Assert.AreEqual(new Complex(1.0, -9.5d), v[1]);
            v[2] = new Complex(1.0, -8.5d);
            Assert.AreEqual(new Complex(1.0, -8.5d), v[2]);
            v[0] = new Complex(1.0, -7.5d);
            Assert.AreEqual(new Complex(1.0, -7.5d), v[0]);
            v[1] = new Complex(1.0, -6.5d);
            Assert.AreEqual(new Complex(1.0, -6.5d), v[1]);
            v[0] = new Complex(1.0, -5.5d);
            Assert.AreEqual(new Complex(1.0, -5.5d), v[0]);
            v[0] = new Complex(1.0, -4.5d);
            Assert.AreEqual(new Complex(1.0, -4.5d), v[0]);
            v[0] = new Complex(1.0, -3.5d);
            Assert.AreEqual(new Complex(1.0, -3.5d), v[0]);
            v[2] = new Complex(1.0, -2.5d);
            Assert.AreEqual(new Complex(1.0, -2.5d), v[2]);
            v[1] = new Complex(1.0, -1.5d);
            Assert.AreEqual(new Complex(1.0, -1.5d), v[1]);
            v[0] = new Complex(1.0, -0.5d);
            Assert.AreEqual(new Complex(1.0, -0.5d), v[0]);
            v[0] = new Complex(1.0, 0.5d);
            Assert.AreEqual(new Complex(1.0, 0.5d), v[0]);
            v[0] = new Complex(1.0, 1.5d);
            Assert.AreEqual(new Complex(1.0, 1.5d), v[0]);
            v[1] = new Complex(1.0, 2.5d);
            Assert.AreEqual(new Complex(1.0, 2.5d), v[1]);
            v[2] = new Complex(1.0, 3.5d);
            Assert.AreEqual(new Complex(1.0, 3.5d), v[2]);
            v[0] = new Complex(1.0, 4.5d);
            Assert.AreEqual(new Complex(1.0, 4.5d), v[0]);
            v[2] = new Complex(1.0, 5.5d);
            Assert.AreEqual(new Complex(1.0, 5.5d), v[2]);
            v[2] = new Complex(1.0, 6.5d);
            Assert.AreEqual(new Complex(1.0, 6.5d), v[2]);
            v[0] = new Complex(1.0, 7.5d);
            Assert.AreEqual(new Complex(1.0, 7.5d), v[0]);
            v[2] = new Complex(1.0, 8.5d);
            Assert.AreEqual(new Complex(1.0, 8.5d), v[2]);
            v[1] = new Complex(1.0, 9.5d);
            Assert.AreEqual(new Complex(1.0, 9.5d), v[1]);
            v[1] = new Complex(2, 0.0);
            Assert.AreEqual(new Complex(2, 0.0), v[1]);
            v[0] = new Complex(2, 1.0);
            Assert.AreEqual(new Complex(2, 1.0), v[0]);
            v[1] = new Complex(2, 2);
            Assert.AreEqual(new Complex(2, 2), v[1]);
            v[1] = new Complex(2, 3);
            Assert.AreEqual(new Complex(2, 3), v[1]);
            v[2] = new Complex(2, 4);
            Assert.AreEqual(new Complex(2, 4), v[2]);
            v[1] = new Complex(2, 5);
            Assert.AreEqual(new Complex(2, 5), v[1]);
            v[0] = new Complex(2, 6);
            Assert.AreEqual(new Complex(2, 6), v[0]);
            v[2] = new Complex(2, 7);
            Assert.AreEqual(new Complex(2, 7), v[2]);
            v[1] = new Complex(2, 8);
            Assert.AreEqual(new Complex(2, 8), v[1]);
            v[2] = new Complex(2, 9);
            Assert.AreEqual(new Complex(2, 9), v[2]);
            v[0] = new Complex(2, -1);
            Assert.AreEqual(new Complex(2, -1), v[0]);
            v[2] = new Complex(2, -2);
            Assert.AreEqual(new Complex(2, -2), v[2]);
            v[0] = new Complex(2, -3);
            Assert.AreEqual(new Complex(2, -3), v[0]);
            v[1] = new Complex(2, -4);
            Assert.AreEqual(new Complex(2, -4), v[1]);
            v[2] = new Complex(2, -5);
            Assert.AreEqual(new Complex(2, -5), v[2]);
            v[0] = new Complex(2, -6);
            Assert.AreEqual(new Complex(2, -6), v[0]);
            v[1] = new Complex(2, -7);
            Assert.AreEqual(new Complex(2, -7), v[1]);
            v[1] = new Complex(2, -8);
            Assert.AreEqual(new Complex(2, -8), v[1]);
            v[0] = new Complex(2, -9);
            Assert.AreEqual(new Complex(2, -9), v[0]);
            v[1] = new Complex(2, -9.5d);
            Assert.AreEqual(new Complex(2, -9.5d), v[1]);
            v[1] = new Complex(2, -8.5d);
            Assert.AreEqual(new Complex(2, -8.5d), v[1]);
            v[0] = new Complex(2, -7.5d);
            Assert.AreEqual(new Complex(2, -7.5d), v[0]);
            v[0] = new Complex(2, -6.5d);
            Assert.AreEqual(new Complex(2, -6.5d), v[0]);
            v[1] = new Complex(2, -5.5d);
            Assert.AreEqual(new Complex(2, -5.5d), v[1]);
            v[1] = new Complex(2, -4.5d);
            Assert.AreEqual(new Complex(2, -4.5d), v[1]);
            v[0] = new Complex(2, -3.5d);
            Assert.AreEqual(new Complex(2, -3.5d), v[0]);
            v[1] = new Complex(2, -2.5d);
            Assert.AreEqual(new Complex(2, -2.5d), v[1]);
            v[0] = new Complex(2, -1.5d);
            Assert.AreEqual(new Complex(2, -1.5d), v[0]);
            v[2] = new Complex(2, -0.5d);
            Assert.AreEqual(new Complex(2, -0.5d), v[2]);
            v[1] = new Complex(2, 0.5d);
            Assert.AreEqual(new Complex(2, 0.5d), v[1]);
            v[1] = new Complex(2, 1.5d);
            Assert.AreEqual(new Complex(2, 1.5d), v[1]);
            v[2] = new Complex(2, 2.5d);
            Assert.AreEqual(new Complex(2, 2.5d), v[2]);
            v[2] = new Complex(2, 3.5d);
            Assert.AreEqual(new Complex(2, 3.5d), v[2]);
            v[1] = new Complex(2, 4.5d);
            Assert.AreEqual(new Complex(2, 4.5d), v[1]);
            v[1] = new Complex(2, 5.5d);
            Assert.AreEqual(new Complex(2, 5.5d), v[1]);
            v[0] = new Complex(2, 6.5d);
            Assert.AreEqual(new Complex(2, 6.5d), v[0]);
            v[0] = new Complex(2, 7.5d);
            Assert.AreEqual(new Complex(2, 7.5d), v[0]);
            v[2] = new Complex(2, 8.5d);
            Assert.AreEqual(new Complex(2, 8.5d), v[2]);
            v[2] = new Complex(2, 9.5d);
            Assert.AreEqual(new Complex(2, 9.5d), v[2]);
            v[1] = new Complex(3, 0.0);
            Assert.AreEqual(new Complex(3, 0.0), v[1]);
            v[2] = new Complex(3, 1.0);
            Assert.AreEqual(new Complex(3, 1.0), v[2]);
            v[0] = new Complex(3, 2);
            Assert.AreEqual(new Complex(3, 2), v[0]);
            v[0] = new Complex(3, 3);
            Assert.AreEqual(new Complex(3, 3), v[0]);
            v[1] = new Complex(3, 4);
            Assert.AreEqual(new Complex(3, 4), v[1]);
            v[0] = new Complex(3, 5);
            Assert.AreEqual(new Complex(3, 5), v[0]);
            v[0] = new Complex(3, 6);
            Assert.AreEqual(new Complex(3, 6), v[0]);
            v[0] = new Complex(3, 7);
            Assert.AreEqual(new Complex(3, 7), v[0]);
            v[2] = new Complex(3, 8);
            Assert.AreEqual(new Complex(3, 8), v[2]);
            v[2] = new Complex(3, 9);
            Assert.AreEqual(new Complex(3, 9), v[2]);
            v[2] = new Complex(3, -1);
            Assert.AreEqual(new Complex(3, -1), v[2]);
            v[0] = new Complex(3, -2);
            Assert.AreEqual(new Complex(3, -2), v[0]);
            v[0] = new Complex(3, -3);
            Assert.AreEqual(new Complex(3, -3), v[0]);
            v[2] = new Complex(3, -4);
            Assert.AreEqual(new Complex(3, -4), v[2]);
            v[1] = new Complex(3, -5);
            Assert.AreEqual(new Complex(3, -5), v[1]);
            v[0] = new Complex(3, -6);
            Assert.AreEqual(new Complex(3, -6), v[0]);
            v[1] = new Complex(3, -7);
            Assert.AreEqual(new Complex(3, -7), v[1]);
            v[0] = new Complex(3, -8);
            Assert.AreEqual(new Complex(3, -8), v[0]);
            v[0] = new Complex(3, -9);
            Assert.AreEqual(new Complex(3, -9), v[0]);
            v[2] = new Complex(3, -9.5d);
            Assert.AreEqual(new Complex(3, -9.5d), v[2]);
            v[2] = new Complex(3, -8.5d);
            Assert.AreEqual(new Complex(3, -8.5d), v[2]);
            v[2] = new Complex(3, -7.5d);
            Assert.AreEqual(new Complex(3, -7.5d), v[2]);
            v[0] = new Complex(3, -6.5d);
            Assert.AreEqual(new Complex(3, -6.5d), v[0]);
            v[0] = new Complex(3, -5.5d);
            Assert.AreEqual(new Complex(3, -5.5d), v[0]);
            v[2] = new Complex(3, -4.5d);
            Assert.AreEqual(new Complex(3, -4.5d), v[2]);
            v[1] = new Complex(3, -3.5d);
            Assert.AreEqual(new Complex(3, -3.5d), v[1]);
            v[1] = new Complex(3, -2.5d);
            Assert.AreEqual(new Complex(3, -2.5d), v[1]);
            v[0] = new Complex(3, -1.5d);
            Assert.AreEqual(new Complex(3, -1.5d), v[0]);
            v[2] = new Complex(3, -0.5d);
            Assert.AreEqual(new Complex(3, -0.5d), v[2]);
            v[2] = new Complex(3, 0.5d);
            Assert.AreEqual(new Complex(3, 0.5d), v[2]);
            v[2] = new Complex(3, 1.5d);
            Assert.AreEqual(new Complex(3, 1.5d), v[2]);
            v[2] = new Complex(3, 2.5d);
            Assert.AreEqual(new Complex(3, 2.5d), v[2]);
            v[2] = new Complex(3, 3.5d);
            Assert.AreEqual(new Complex(3, 3.5d), v[2]);
            v[2] = new Complex(3, 4.5d);
            Assert.AreEqual(new Complex(3, 4.5d), v[2]);
            v[2] = new Complex(3, 5.5d);
            Assert.AreEqual(new Complex(3, 5.5d), v[2]);
            v[1] = new Complex(3, 6.5d);
            Assert.AreEqual(new Complex(3, 6.5d), v[1]);
            v[0] = new Complex(3, 7.5d);
            Assert.AreEqual(new Complex(3, 7.5d), v[0]);
            v[2] = new Complex(3, 8.5d);
            Assert.AreEqual(new Complex(3, 8.5d), v[2]);
            v[1] = new Complex(3, 9.5d);
            Assert.AreEqual(new Complex(3, 9.5d), v[1]);
            v[1] = new Complex(4, 0.0);
            Assert.AreEqual(new Complex(4, 0.0), v[1]);
            v[0] = new Complex(4, 1.0);
            Assert.AreEqual(new Complex(4, 1.0), v[0]);
            v[0] = new Complex(4, 2);
            Assert.AreEqual(new Complex(4, 2), v[0]);
            v[2] = new Complex(4, 3);
            Assert.AreEqual(new Complex(4, 3), v[2]);
            v[1] = new Complex(4, 4);
            Assert.AreEqual(new Complex(4, 4), v[1]);
            v[2] = new Complex(4, 5);
            Assert.AreEqual(new Complex(4, 5), v[2]);
            v[0] = new Complex(4, 6);
            Assert.AreEqual(new Complex(4, 6), v[0]);
            v[0] = new Complex(4, 7);
            Assert.AreEqual(new Complex(4, 7), v[0]);
            v[0] = new Complex(4, 8);
            Assert.AreEqual(new Complex(4, 8), v[0]);
            v[1] = new Complex(4, 9);
            Assert.AreEqual(new Complex(4, 9), v[1]);
            v[0] = new Complex(4, -1);
            Assert.AreEqual(new Complex(4, -1), v[0]);
            v[0] = new Complex(4, -2);
            Assert.AreEqual(new Complex(4, -2), v[0]);
            v[2] = new Complex(4, -3);
            Assert.AreEqual(new Complex(4, -3), v[2]);
            v[0] = new Complex(4, -4);
            Assert.AreEqual(new Complex(4, -4), v[0]);
            v[2] = new Complex(4, -5);
            Assert.AreEqual(new Complex(4, -5), v[2]);
            v[2] = new Complex(4, -6);
            Assert.AreEqual(new Complex(4, -6), v[2]);
            v[1] = new Complex(4, -7);
            Assert.AreEqual(new Complex(4, -7), v[1]);
            v[2] = new Complex(4, -8);
            Assert.AreEqual(new Complex(4, -8), v[2]);
            v[2] = new Complex(4, -9);
            Assert.AreEqual(new Complex(4, -9), v[2]);
            v[0] = new Complex(4, -9.5d);
            Assert.AreEqual(new Complex(4, -9.5d), v[0]);
            v[0] = new Complex(4, -8.5d);
            Assert.AreEqual(new Complex(4, -8.5d), v[0]);
            v[2] = new Complex(4, -7.5d);
            Assert.AreEqual(new Complex(4, -7.5d), v[2]);
            v[0] = new Complex(4, -6.5d);
            Assert.AreEqual(new Complex(4, -6.5d), v[0]);
            v[1] = new Complex(4, -5.5d);
            Assert.AreEqual(new Complex(4, -5.5d), v[1]);
            v[2] = new Complex(4, -4.5d);
            Assert.AreEqual(new Complex(4, -4.5d), v[2]);
            v[0] = new Complex(4, -3.5d);
            Assert.AreEqual(new Complex(4, -3.5d), v[0]);
            v[2] = new Complex(4, -2.5d);
            Assert.AreEqual(new Complex(4, -2.5d), v[2]);
            v[1] = new Complex(4, -1.5d);
            Assert.AreEqual(new Complex(4, -1.5d), v[1]);
            v[1] = new Complex(4, -0.5d);
            Assert.AreEqual(new Complex(4, -0.5d), v[1]);
            v[0] = new Complex(4, 0.5d);
            Assert.AreEqual(new Complex(4, 0.5d), v[0]);
            v[2] = new Complex(4, 1.5d);
            Assert.AreEqual(new Complex(4, 1.5d), v[2]);
            v[2] = new Complex(4, 2.5d);
            Assert.AreEqual(new Complex(4, 2.5d), v[2]);
            v[1] = new Complex(4, 3.5d);
            Assert.AreEqual(new Complex(4, 3.5d), v[1]);
            v[2] = new Complex(4, 4.5d);
            Assert.AreEqual(new Complex(4, 4.5d), v[2]);
            v[1] = new Complex(4, 5.5d);
            Assert.AreEqual(new Complex(4, 5.5d), v[1]);
            v[2] = new Complex(4, 6.5d);
            Assert.AreEqual(new Complex(4, 6.5d), v[2]);
            v[2] = new Complex(4, 7.5d);
            Assert.AreEqual(new Complex(4, 7.5d), v[2]);
            v[0] = new Complex(4, 8.5d);
            Assert.AreEqual(new Complex(4, 8.5d), v[0]);
            v[2] = new Complex(4, 9.5d);
            Assert.AreEqual(new Complex(4, 9.5d), v[2]);
            v[0] = new Complex(5, 0.0);
            Assert.AreEqual(new Complex(5, 0.0), v[0]);
            v[2] = new Complex(5, 1.0);
            Assert.AreEqual(new Complex(5, 1.0), v[2]);
            v[0] = new Complex(5, 2);
            Assert.AreEqual(new Complex(5, 2), v[0]);
            v[0] = new Complex(5, 3);
            Assert.AreEqual(new Complex(5, 3), v[0]);
            v[1] = new Complex(5, 4);
            Assert.AreEqual(new Complex(5, 4), v[1]);
            v[1] = new Complex(5, 5);
            Assert.AreEqual(new Complex(5, 5), v[1]);
            v[2] = new Complex(5, 6);
            Assert.AreEqual(new Complex(5, 6), v[2]);
            v[2] = new Complex(5, 7);
            Assert.AreEqual(new Complex(5, 7), v[2]);
            v[2] = new Complex(5, 8);
            Assert.AreEqual(new Complex(5, 8), v[2]);
            v[0] = new Complex(5, 9);
            Assert.AreEqual(new Complex(5, 9), v[0]);
            v[0] = new Complex(5, -1);
            Assert.AreEqual(new Complex(5, -1), v[0]);
            v[0] = new Complex(5, -2);
            Assert.AreEqual(new Complex(5, -2), v[0]);
            v[1] = new Complex(5, -3);
            Assert.AreEqual(new Complex(5, -3), v[1]);
            v[1] = new Complex(5, -4);
            Assert.AreEqual(new Complex(5, -4), v[1]);
            v[2] = new Complex(5, -5);
            Assert.AreEqual(new Complex(5, -5), v[2]);
            v[0] = new Complex(5, -6);
            Assert.AreEqual(new Complex(5, -6), v[0]);
            v[2] = new Complex(5, -7);
            Assert.AreEqual(new Complex(5, -7), v[2]);
            v[0] = new Complex(5, -8);
            Assert.AreEqual(new Complex(5, -8), v[0]);
            v[2] = new Complex(5, -9);
            Assert.AreEqual(new Complex(5, -9), v[2]);
            v[2] = new Complex(5, -9.5d);
            Assert.AreEqual(new Complex(5, -9.5d), v[2]);
            v[1] = new Complex(5, -8.5d);
            Assert.AreEqual(new Complex(5, -8.5d), v[1]);
            v[0] = new Complex(5, -7.5d);
            Assert.AreEqual(new Complex(5, -7.5d), v[0]);
            v[2] = new Complex(5, -6.5d);
            Assert.AreEqual(new Complex(5, -6.5d), v[2]);
            v[1] = new Complex(5, -5.5d);
            Assert.AreEqual(new Complex(5, -5.5d), v[1]);
            v[2] = new Complex(5, -4.5d);
            Assert.AreEqual(new Complex(5, -4.5d), v[2]);
            v[2] = new Complex(5, -3.5d);
            Assert.AreEqual(new Complex(5, -3.5d), v[2]);
            v[0] = new Complex(5, -2.5d);
            Assert.AreEqual(new Complex(5, -2.5d), v[0]);
            v[1] = new Complex(5, -1.5d);
            Assert.AreEqual(new Complex(5, -1.5d), v[1]);
            v[0] = new Complex(5, -0.5d);
            Assert.AreEqual(new Complex(5, -0.5d), v[0]);
            v[2] = new Complex(5, 0.5d);
            Assert.AreEqual(new Complex(5, 0.5d), v[2]);
            v[0] = new Complex(5, 1.5d);
            Assert.AreEqual(new Complex(5, 1.5d), v[0]);
            v[0] = new Complex(5, 2.5d);
            Assert.AreEqual(new Complex(5, 2.5d), v[0]);
            v[1] = new Complex(5, 3.5d);
            Assert.AreEqual(new Complex(5, 3.5d), v[1]);
            v[0] = new Complex(5, 4.5d);
            Assert.AreEqual(new Complex(5, 4.5d), v[0]);
            v[1] = new Complex(5, 5.5d);
            Assert.AreEqual(new Complex(5, 5.5d), v[1]);
            v[1] = new Complex(5, 6.5d);
            Assert.AreEqual(new Complex(5, 6.5d), v[1]);
            v[0] = new Complex(5, 7.5d);
            Assert.AreEqual(new Complex(5, 7.5d), v[0]);
            v[1] = new Complex(5, 8.5d);
            Assert.AreEqual(new Complex(5, 8.5d), v[1]);
            v[2] = new Complex(5, 9.5d);
            Assert.AreEqual(new Complex(5, 9.5d), v[2]);
            v[2] = new Complex(6, 0.0);
            Assert.AreEqual(new Complex(6, 0.0), v[2]);
            v[0] = new Complex(6, 1.0);
            Assert.AreEqual(new Complex(6, 1.0), v[0]);
            v[0] = new Complex(6, 2);
            Assert.AreEqual(new Complex(6, 2), v[0]);
            v[0] = new Complex(6, 3);
            Assert.AreEqual(new Complex(6, 3), v[0]);
            v[1] = new Complex(6, 4);
            Assert.AreEqual(new Complex(6, 4), v[1]);
            v[1] = new Complex(6, 5);
            Assert.AreEqual(new Complex(6, 5), v[1]);
            v[0] = new Complex(6, 6);
            Assert.AreEqual(new Complex(6, 6), v[0]);
            v[0] = new Complex(6, 7);
            Assert.AreEqual(new Complex(6, 7), v[0]);
            v[1] = new Complex(6, 8);
            Assert.AreEqual(new Complex(6, 8), v[1]);
            v[2] = new Complex(6, 9);
            Assert.AreEqual(new Complex(6, 9), v[2]);
            v[2] = new Complex(6, -1);
            Assert.AreEqual(new Complex(6, -1), v[2]);
            v[2] = new Complex(6, -2);
            Assert.AreEqual(new Complex(6, -2), v[2]);
            v[1] = new Complex(6, -3);
            Assert.AreEqual(new Complex(6, -3), v[1]);
            v[0] = new Complex(6, -4);
            Assert.AreEqual(new Complex(6, -4), v[0]);
            v[1] = new Complex(6, -5);
            Assert.AreEqual(new Complex(6, -5), v[1]);
            v[0] = new Complex(6, -6);
            Assert.AreEqual(new Complex(6, -6), v[0]);
            v[0] = new Complex(6, -7);
            Assert.AreEqual(new Complex(6, -7), v[0]);
            v[2] = new Complex(6, -8);
            Assert.AreEqual(new Complex(6, -8), v[2]);
            v[1] = new Complex(6, -9);
            Assert.AreEqual(new Complex(6, -9), v[1]);
            v[1] = new Complex(6, -9.5d);
            Assert.AreEqual(new Complex(6, -9.5d), v[1]);
            v[2] = new Complex(6, -8.5d);
            Assert.AreEqual(new Complex(6, -8.5d), v[2]);
            v[0] = new Complex(6, -7.5d);
            Assert.AreEqual(new Complex(6, -7.5d), v[0]);
            v[0] = new Complex(6, -6.5d);
            Assert.AreEqual(new Complex(6, -6.5d), v[0]);
            v[2] = new Complex(6, -5.5d);
            Assert.AreEqual(new Complex(6, -5.5d), v[2]);
            v[0] = new Complex(6, -4.5d);
            Assert.AreEqual(new Complex(6, -4.5d), v[0]);
            v[2] = new Complex(6, -3.5d);
            Assert.AreEqual(new Complex(6, -3.5d), v[2]);
            v[2] = new Complex(6, -2.5d);
            Assert.AreEqual(new Complex(6, -2.5d), v[2]);
            v[2] = new Complex(6, -1.5d);
            Assert.AreEqual(new Complex(6, -1.5d), v[2]);
            v[1] = new Complex(6, -0.5d);
            Assert.AreEqual(new Complex(6, -0.5d), v[1]);
            v[2] = new Complex(6, 0.5d);
            Assert.AreEqual(new Complex(6, 0.5d), v[2]);
            v[0] = new Complex(6, 1.5d);
            Assert.AreEqual(new Complex(6, 1.5d), v[0]);
            v[0] = new Complex(6, 2.5d);
            Assert.AreEqual(new Complex(6, 2.5d), v[0]);
            v[1] = new Complex(6, 3.5d);
            Assert.AreEqual(new Complex(6, 3.5d), v[1]);
            v[1] = new Complex(6, 4.5d);
            Assert.AreEqual(new Complex(6, 4.5d), v[1]);
            v[2] = new Complex(6, 5.5d);
            Assert.AreEqual(new Complex(6, 5.5d), v[2]);
            v[1] = new Complex(6, 6.5d);
            Assert.AreEqual(new Complex(6, 6.5d), v[1]);
            v[0] = new Complex(6, 7.5d);
            Assert.AreEqual(new Complex(6, 7.5d), v[0]);
            v[0] = new Complex(6, 8.5d);
            Assert.AreEqual(new Complex(6, 8.5d), v[0]);
            v[0] = new Complex(6, 9.5d);
            Assert.AreEqual(new Complex(6, 9.5d), v[0]);
            v[0] = new Complex(7, 0.0);
            Assert.AreEqual(new Complex(7, 0.0), v[0]);
            v[2] = new Complex(7, 1.0);
            Assert.AreEqual(new Complex(7, 1.0), v[2]);
            v[1] = new Complex(7, 2);
            Assert.AreEqual(new Complex(7, 2), v[1]);
            v[2] = new Complex(7, 3);
            Assert.AreEqual(new Complex(7, 3), v[2]);
            v[2] = new Complex(7, 4);
            Assert.AreEqual(new Complex(7, 4), v[2]);
            v[1] = new Complex(7, 5);
            Assert.AreEqual(new Complex(7, 5), v[1]);
            v[0] = new Complex(7, 6);
            Assert.AreEqual(new Complex(7, 6), v[0]);
            v[1] = new Complex(7, 7);
            Assert.AreEqual(new Complex(7, 7), v[1]);
            v[2] = new Complex(7, 8);
            Assert.AreEqual(new Complex(7, 8), v[2]);
            v[2] = new Complex(7, 9);
            Assert.AreEqual(new Complex(7, 9), v[2]);
            v[2] = new Complex(7, -1);
            Assert.AreEqual(new Complex(7, -1), v[2]);
            v[1] = new Complex(7, -2);
            Assert.AreEqual(new Complex(7, -2), v[1]);
            v[1] = new Complex(7, -3);
            Assert.AreEqual(new Complex(7, -3), v[1]);
            v[1] = new Complex(7, -4);
            Assert.AreEqual(new Complex(7, -4), v[1]);
            v[0] = new Complex(7, -5);
            Assert.AreEqual(new Complex(7, -5), v[0]);
            v[0] = new Complex(7, -6);
            Assert.AreEqual(new Complex(7, -6), v[0]);
            v[2] = new Complex(7, -7);
            Assert.AreEqual(new Complex(7, -7), v[2]);
            v[0] = new Complex(7, -8);
            Assert.AreEqual(new Complex(7, -8), v[0]);
            v[0] = new Complex(7, -9);
            Assert.AreEqual(new Complex(7, -9), v[0]);
            v[0] = new Complex(7, -9.5d);
            Assert.AreEqual(new Complex(7, -9.5d), v[0]);
            v[1] = new Complex(7, -8.5d);
            Assert.AreEqual(new Complex(7, -8.5d), v[1]);
            v[1] = new Complex(7, -7.5d);
            Assert.AreEqual(new Complex(7, -7.5d), v[1]);
            v[0] = new Complex(7, -6.5d);
            Assert.AreEqual(new Complex(7, -6.5d), v[0]);
            v[2] = new Complex(7, -5.5d);
            Assert.AreEqual(new Complex(7, -5.5d), v[2]);
            v[2] = new Complex(7, -4.5d);
            Assert.AreEqual(new Complex(7, -4.5d), v[2]);
            v[1] = new Complex(7, -3.5d);
            Assert.AreEqual(new Complex(7, -3.5d), v[1]);
            v[1] = new Complex(7, -2.5d);
            Assert.AreEqual(new Complex(7, -2.5d), v[1]);
            v[0] = new Complex(7, -1.5d);
            Assert.AreEqual(new Complex(7, -1.5d), v[0]);
            v[0] = new Complex(7, -0.5d);
            Assert.AreEqual(new Complex(7, -0.5d), v[0]);
            v[0] = new Complex(7, 0.5d);
            Assert.AreEqual(new Complex(7, 0.5d), v[0]);
            v[2] = new Complex(7, 1.5d);
            Assert.AreEqual(new Complex(7, 1.5d), v[2]);
            v[0] = new Complex(7, 2.5d);
            Assert.AreEqual(new Complex(7, 2.5d), v[0]);
            v[0] = new Complex(7, 3.5d);
            Assert.AreEqual(new Complex(7, 3.5d), v[0]);
            v[2] = new Complex(7, 4.5d);
            Assert.AreEqual(new Complex(7, 4.5d), v[2]);
            v[1] = new Complex(7, 5.5d);
            Assert.AreEqual(new Complex(7, 5.5d), v[1]);
            v[1] = new Complex(7, 6.5d);
            Assert.AreEqual(new Complex(7, 6.5d), v[1]);
            v[0] = new Complex(7, 7.5d);
            Assert.AreEqual(new Complex(7, 7.5d), v[0]);
            v[1] = new Complex(7, 8.5d);
            Assert.AreEqual(new Complex(7, 8.5d), v[1]);
            v[0] = new Complex(7, 9.5d);
            Assert.AreEqual(new Complex(7, 9.5d), v[0]);
            v[1] = new Complex(8, 0.0);
            Assert.AreEqual(new Complex(8, 0.0), v[1]);
            v[2] = new Complex(8, 1.0);
            Assert.AreEqual(new Complex(8, 1.0), v[2]);
            v[1] = new Complex(8, 2);
            Assert.AreEqual(new Complex(8, 2), v[1]);
            v[0] = new Complex(8, 3);
            Assert.AreEqual(new Complex(8, 3), v[0]);
            v[2] = new Complex(8, 4);
            Assert.AreEqual(new Complex(8, 4), v[2]);
            v[1] = new Complex(8, 5);
            Assert.AreEqual(new Complex(8, 5), v[1]);
            v[1] = new Complex(8, 6);
            Assert.AreEqual(new Complex(8, 6), v[1]);
            v[2] = new Complex(8, 7);
            Assert.AreEqual(new Complex(8, 7), v[2]);
            v[2] = new Complex(8, 8);
            Assert.AreEqual(new Complex(8, 8), v[2]);
            v[0] = new Complex(8, 9);
            Assert.AreEqual(new Complex(8, 9), v[0]);
            v[1] = new Complex(8, -1);
            Assert.AreEqual(new Complex(8, -1), v[1]);
            v[0] = new Complex(8, -2);
            Assert.AreEqual(new Complex(8, -2), v[0]);
            v[1] = new Complex(8, -3);
            Assert.AreEqual(new Complex(8, -3), v[1]);
            v[0] = new Complex(8, -4);
            Assert.AreEqual(new Complex(8, -4), v[0]);
            v[2] = new Complex(8, -5);
            Assert.AreEqual(new Complex(8, -5), v[2]);
            v[2] = new Complex(8, -6);
            Assert.AreEqual(new Complex(8, -6), v[2]);
            v[2] = new Complex(8, -7);
            Assert.AreEqual(new Complex(8, -7), v[2]);
            v[1] = new Complex(8, -8);
            Assert.AreEqual(new Complex(8, -8), v[1]);
            v[1] = new Complex(8, -9);
            Assert.AreEqual(new Complex(8, -9), v[1]);
            v[2] = new Complex(8, -9.5d);
            Assert.AreEqual(new Complex(8, -9.5d), v[2]);
            v[0] = new Complex(8, -8.5d);
            Assert.AreEqual(new Complex(8, -8.5d), v[0]);
            v[2] = new Complex(8, -7.5d);
            Assert.AreEqual(new Complex(8, -7.5d), v[2]);
            v[2] = new Complex(8, -6.5d);
            Assert.AreEqual(new Complex(8, -6.5d), v[2]);
            v[1] = new Complex(8, -5.5d);
            Assert.AreEqual(new Complex(8, -5.5d), v[1]);
            v[2] = new Complex(8, -4.5d);
            Assert.AreEqual(new Complex(8, -4.5d), v[2]);
            v[2] = new Complex(8, -3.5d);
            Assert.AreEqual(new Complex(8, -3.5d), v[2]);
            v[2] = new Complex(8, -2.5d);
            Assert.AreEqual(new Complex(8, -2.5d), v[2]);
            v[0] = new Complex(8, -1.5d);
            Assert.AreEqual(new Complex(8, -1.5d), v[0]);
            v[2] = new Complex(8, -0.5d);
            Assert.AreEqual(new Complex(8, -0.5d), v[2]);
            v[0] = new Complex(8, 0.5d);
            Assert.AreEqual(new Complex(8, 0.5d), v[0]);
            v[1] = new Complex(8, 1.5d);
            Assert.AreEqual(new Complex(8, 1.5d), v[1]);
            v[2] = new Complex(8, 2.5d);
            Assert.AreEqual(new Complex(8, 2.5d), v[2]);
            v[0] = new Complex(8, 3.5d);
            Assert.AreEqual(new Complex(8, 3.5d), v[0]);
            v[2] = new Complex(8, 4.5d);
            Assert.AreEqual(new Complex(8, 4.5d), v[2]);
            v[2] = new Complex(8, 5.5d);
            Assert.AreEqual(new Complex(8, 5.5d), v[2]);
            v[0] = new Complex(8, 6.5d);
            Assert.AreEqual(new Complex(8, 6.5d), v[0]);
            v[0] = new Complex(8, 7.5d);
            Assert.AreEqual(new Complex(8, 7.5d), v[0]);
            v[1] = new Complex(8, 8.5d);
            Assert.AreEqual(new Complex(8, 8.5d), v[1]);
            v[1] = new Complex(8, 9.5d);
            Assert.AreEqual(new Complex(8, 9.5d), v[1]);
            v[0] = new Complex(9, 0.0);
            Assert.AreEqual(new Complex(9, 0.0), v[0]);
            v[1] = new Complex(9, 1.0);
            Assert.AreEqual(new Complex(9, 1.0), v[1]);
            v[2] = new Complex(9, 2);
            Assert.AreEqual(new Complex(9, 2), v[2]);
            v[2] = new Complex(9, 3);
            Assert.AreEqual(new Complex(9, 3), v[2]);
            v[2] = new Complex(9, 4);
            Assert.AreEqual(new Complex(9, 4), v[2]);
            v[1] = new Complex(9, 5);
            Assert.AreEqual(new Complex(9, 5), v[1]);
            v[0] = new Complex(9, 6);
            Assert.AreEqual(new Complex(9, 6), v[0]);
            v[1] = new Complex(9, 7);
            Assert.AreEqual(new Complex(9, 7), v[1]);
            v[2] = new Complex(9, 8);
            Assert.AreEqual(new Complex(9, 8), v[2]);
            v[0] = new Complex(9, 9);
            Assert.AreEqual(new Complex(9, 9), v[0]);
            v[2] = new Complex(9, -1);
            Assert.AreEqual(new Complex(9, -1), v[2]);
            v[1] = new Complex(9, -2);
            Assert.AreEqual(new Complex(9, -2), v[1]);
            v[2] = new Complex(9, -3);
            Assert.AreEqual(new Complex(9, -3), v[2]);
            v[2] = new Complex(9, -4);
            Assert.AreEqual(new Complex(9, -4), v[2]);
            v[1] = new Complex(9, -5);
            Assert.AreEqual(new Complex(9, -5), v[1]);
            v[0] = new Complex(9, -6);
            Assert.AreEqual(new Complex(9, -6), v[0]);
            v[1] = new Complex(9, -7);
            Assert.AreEqual(new Complex(9, -7), v[1]);
            v[0] = new Complex(9, -8);
            Assert.AreEqual(new Complex(9, -8), v[0]);
            v[2] = new Complex(9, -9);
            Assert.AreEqual(new Complex(9, -9), v[2]);
            v[0] = new Complex(9, -9.5d);
            Assert.AreEqual(new Complex(9, -9.5d), v[0]);
            v[0] = new Complex(9, -8.5d);
            Assert.AreEqual(new Complex(9, -8.5d), v[0]);
            v[2] = new Complex(9, -7.5d);
            Assert.AreEqual(new Complex(9, -7.5d), v[2]);
            v[0] = new Complex(9, -6.5d);
            Assert.AreEqual(new Complex(9, -6.5d), v[0]);
            v[2] = new Complex(9, -5.5d);
            Assert.AreEqual(new Complex(9, -5.5d), v[2]);
            v[2] = new Complex(9, -4.5d);
            Assert.AreEqual(new Complex(9, -4.5d), v[2]);
            v[2] = new Complex(9, -3.5d);
            Assert.AreEqual(new Complex(9, -3.5d), v[2]);
            v[1] = new Complex(9, -2.5d);
            Assert.AreEqual(new Complex(9, -2.5d), v[1]);
            v[2] = new Complex(9, -1.5d);
            Assert.AreEqual(new Complex(9, -1.5d), v[2]);
            v[2] = new Complex(9, -0.5d);
            Assert.AreEqual(new Complex(9, -0.5d), v[2]);
            v[0] = new Complex(9, 0.5d);
            Assert.AreEqual(new Complex(9, 0.5d), v[0]);
            v[2] = new Complex(9, 1.5d);
            Assert.AreEqual(new Complex(9, 1.5d), v[2]);
            v[1] = new Complex(9, 2.5d);
            Assert.AreEqual(new Complex(9, 2.5d), v[1]);
            v[1] = new Complex(9, 3.5d);
            Assert.AreEqual(new Complex(9, 3.5d), v[1]);
            v[0] = new Complex(9, 4.5d);
            Assert.AreEqual(new Complex(9, 4.5d), v[0]);
            v[0] = new Complex(9, 5.5d);
            Assert.AreEqual(new Complex(9, 5.5d), v[0]);
            v[1] = new Complex(9, 6.5d);
            Assert.AreEqual(new Complex(9, 6.5d), v[1]);
            v[1] = new Complex(9, 7.5d);
            Assert.AreEqual(new Complex(9, 7.5d), v[1]);
            v[0] = new Complex(9, 8.5d);
            Assert.AreEqual(new Complex(9, 8.5d), v[0]);
            v[2] = new Complex(9, 9.5d);
            Assert.AreEqual(new Complex(9, 9.5d), v[2]);
            v[2] = new Complex(-1, 0.0);
            Assert.AreEqual(new Complex(-1, 0.0), v[2]);
            v[1] = new Complex(-1, 1.0);
            Assert.AreEqual(new Complex(-1, 1.0), v[1]);
            v[1] = new Complex(-1, 2);
            Assert.AreEqual(new Complex(-1, 2), v[1]);
            v[2] = new Complex(-1, 3);
            Assert.AreEqual(new Complex(-1, 3), v[2]);
            v[0] = new Complex(-1, 4);
            Assert.AreEqual(new Complex(-1, 4), v[0]);
            v[2] = new Complex(-1, 5);
            Assert.AreEqual(new Complex(-1, 5), v[2]);
            v[1] = new Complex(-1, 6);
            Assert.AreEqual(new Complex(-1, 6), v[1]);
            v[2] = new Complex(-1, 7);
            Assert.AreEqual(new Complex(-1, 7), v[2]);
            v[0] = new Complex(-1, 8);
            Assert.AreEqual(new Complex(-1, 8), v[0]);
            v[2] = new Complex(-1, 9);
            Assert.AreEqual(new Complex(-1, 9), v[2]);
            v[2] = new Complex(-1, -1);
            Assert.AreEqual(new Complex(-1, -1), v[2]);
            v[0] = new Complex(-1, -2);
            Assert.AreEqual(new Complex(-1, -2), v[0]);
            v[2] = new Complex(-1, -3);
            Assert.AreEqual(new Complex(-1, -3), v[2]);
            v[1] = new Complex(-1, -4);
            Assert.AreEqual(new Complex(-1, -4), v[1]);
            v[0] = new Complex(-1, -5);
            Assert.AreEqual(new Complex(-1, -5), v[0]);
            v[1] = new Complex(-1, -6);
            Assert.AreEqual(new Complex(-1, -6), v[1]);
            v[1] = new Complex(-1, -7);
            Assert.AreEqual(new Complex(-1, -7), v[1]);
            v[1] = new Complex(-1, -8);
            Assert.AreEqual(new Complex(-1, -8), v[1]);
            v[2] = new Complex(-1, -9);
            Assert.AreEqual(new Complex(-1, -9), v[2]);
            v[0] = new Complex(-1, -9.5d);
            Assert.AreEqual(new Complex(-1, -9.5d), v[0]);
            v[0] = new Complex(-1, -8.5d);
            Assert.AreEqual(new Complex(-1, -8.5d), v[0]);
            v[2] = new Complex(-1, -7.5d);
            Assert.AreEqual(new Complex(-1, -7.5d), v[2]);
            v[1] = new Complex(-1, -6.5d);
            Assert.AreEqual(new Complex(-1, -6.5d), v[1]);
            v[1] = new Complex(-1, -5.5d);
            Assert.AreEqual(new Complex(-1, -5.5d), v[1]);
            v[2] = new Complex(-1, -4.5d);
            Assert.AreEqual(new Complex(-1, -4.5d), v[2]);
            v[1] = new Complex(-1, -3.5d);
            Assert.AreEqual(new Complex(-1, -3.5d), v[1]);
            v[1] = new Complex(-1, -2.5d);
            Assert.AreEqual(new Complex(-1, -2.5d), v[1]);
            v[2] = new Complex(-1, -1.5d);
            Assert.AreEqual(new Complex(-1, -1.5d), v[2]);
            v[2] = new Complex(-1, -0.5d);
            Assert.AreEqual(new Complex(-1, -0.5d), v[2]);
            v[1] = new Complex(-1, 0.5d);
            Assert.AreEqual(new Complex(-1, 0.5d), v[1]);
            v[0] = new Complex(-1, 1.5d);
            Assert.AreEqual(new Complex(-1, 1.5d), v[0]);
            v[1] = new Complex(-1, 2.5d);
            Assert.AreEqual(new Complex(-1, 2.5d), v[1]);
            v[1] = new Complex(-1, 3.5d);
            Assert.AreEqual(new Complex(-1, 3.5d), v[1]);
            v[1] = new Complex(-1, 4.5d);
            Assert.AreEqual(new Complex(-1, 4.5d), v[1]);
            v[2] = new Complex(-1, 5.5d);
            Assert.AreEqual(new Complex(-1, 5.5d), v[2]);
            v[2] = new Complex(-1, 6.5d);
            Assert.AreEqual(new Complex(-1, 6.5d), v[2]);
            v[1] = new Complex(-1, 7.5d);
            Assert.AreEqual(new Complex(-1, 7.5d), v[1]);
            v[2] = new Complex(-1, 8.5d);
            Assert.AreEqual(new Complex(-1, 8.5d), v[2]);
            v[0] = new Complex(-1, 9.5d);
            Assert.AreEqual(new Complex(-1, 9.5d), v[0]);
            v[0] = new Complex(-2, 0.0);
            Assert.AreEqual(new Complex(-2, 0.0), v[0]);
            v[0] = new Complex(-2, 1.0);
            Assert.AreEqual(new Complex(-2, 1.0), v[0]);
            v[0] = new Complex(-2, 2);
            Assert.AreEqual(new Complex(-2, 2), v[0]);
            v[1] = new Complex(-2, 3);
            Assert.AreEqual(new Complex(-2, 3), v[1]);
            v[2] = new Complex(-2, 4);
            Assert.AreEqual(new Complex(-2, 4), v[2]);
            v[0] = new Complex(-2, 5);
            Assert.AreEqual(new Complex(-2, 5), v[0]);
            v[2] = new Complex(-2, 6);
            Assert.AreEqual(new Complex(-2, 6), v[2]);
            v[2] = new Complex(-2, 7);
            Assert.AreEqual(new Complex(-2, 7), v[2]);
            v[0] = new Complex(-2, 8);
            Assert.AreEqual(new Complex(-2, 8), v[0]);
            v[1] = new Complex(-2, 9);
            Assert.AreEqual(new Complex(-2, 9), v[1]);
            v[2] = new Complex(-2, -1);
            Assert.AreEqual(new Complex(-2, -1), v[2]);
            v[1] = new Complex(-2, -2);
            Assert.AreEqual(new Complex(-2, -2), v[1]);
            v[0] = new Complex(-2, -3);
            Assert.AreEqual(new Complex(-2, -3), v[0]);
            v[1] = new Complex(-2, -4);
            Assert.AreEqual(new Complex(-2, -4), v[1]);
            v[2] = new Complex(-2, -5);
            Assert.AreEqual(new Complex(-2, -5), v[2]);
            v[1] = new Complex(-2, -6);
            Assert.AreEqual(new Complex(-2, -6), v[1]);
            v[2] = new Complex(-2, -7);
            Assert.AreEqual(new Complex(-2, -7), v[2]);
            v[2] = new Complex(-2, -8);
            Assert.AreEqual(new Complex(-2, -8), v[2]);
            v[2] = new Complex(-2, -9);
            Assert.AreEqual(new Complex(-2, -9), v[2]);
            v[0] = new Complex(-2, -9.5d);
            Assert.AreEqual(new Complex(-2, -9.5d), v[0]);
            v[1] = new Complex(-2, -8.5d);
            Assert.AreEqual(new Complex(-2, -8.5d), v[1]);
            v[1] = new Complex(-2, -7.5d);
            Assert.AreEqual(new Complex(-2, -7.5d), v[1]);
            v[2] = new Complex(-2, -6.5d);
            Assert.AreEqual(new Complex(-2, -6.5d), v[2]);
            v[2] = new Complex(-2, -5.5d);
            Assert.AreEqual(new Complex(-2, -5.5d), v[2]);
            v[1] = new Complex(-2, -4.5d);
            Assert.AreEqual(new Complex(-2, -4.5d), v[1]);
            v[2] = new Complex(-2, -3.5d);
            Assert.AreEqual(new Complex(-2, -3.5d), v[2]);
            v[0] = new Complex(-2, -2.5d);
            Assert.AreEqual(new Complex(-2, -2.5d), v[0]);
            v[2] = new Complex(-2, -1.5d);
            Assert.AreEqual(new Complex(-2, -1.5d), v[2]);
            v[1] = new Complex(-2, -0.5d);
            Assert.AreEqual(new Complex(-2, -0.5d), v[1]);
            v[1] = new Complex(-2, 0.5d);
            Assert.AreEqual(new Complex(-2, 0.5d), v[1]);
            v[0] = new Complex(-2, 1.5d);
            Assert.AreEqual(new Complex(-2, 1.5d), v[0]);
            v[2] = new Complex(-2, 2.5d);
            Assert.AreEqual(new Complex(-2, 2.5d), v[2]);
            v[2] = new Complex(-2, 3.5d);
            Assert.AreEqual(new Complex(-2, 3.5d), v[2]);
            v[0] = new Complex(-2, 4.5d);
            Assert.AreEqual(new Complex(-2, 4.5d), v[0]);
            v[2] = new Complex(-2, 5.5d);
            Assert.AreEqual(new Complex(-2, 5.5d), v[2]);
            v[0] = new Complex(-2, 6.5d);
            Assert.AreEqual(new Complex(-2, 6.5d), v[0]);
            v[0] = new Complex(-2, 7.5d);
            Assert.AreEqual(new Complex(-2, 7.5d), v[0]);
            v[1] = new Complex(-2, 8.5d);
            Assert.AreEqual(new Complex(-2, 8.5d), v[1]);
            v[1] = new Complex(-2, 9.5d);
            Assert.AreEqual(new Complex(-2, 9.5d), v[1]);
            v[1] = new Complex(-3, 0.0);
            Assert.AreEqual(new Complex(-3, 0.0), v[1]);
            v[2] = new Complex(-3, 1.0);
            Assert.AreEqual(new Complex(-3, 1.0), v[2]);
            v[1] = new Complex(-3, 2);
            Assert.AreEqual(new Complex(-3, 2), v[1]);
            v[0] = new Complex(-3, 3);
            Assert.AreEqual(new Complex(-3, 3), v[0]);
            v[1] = new Complex(-3, 4);
            Assert.AreEqual(new Complex(-3, 4), v[1]);
            v[2] = new Complex(-3, 5);
            Assert.AreEqual(new Complex(-3, 5), v[2]);
            v[2] = new Complex(-3, 6);
            Assert.AreEqual(new Complex(-3, 6), v[2]);
            v[2] = new Complex(-3, 7);
            Assert.AreEqual(new Complex(-3, 7), v[2]);
            v[2] = new Complex(-3, 8);
            Assert.AreEqual(new Complex(-3, 8), v[2]);
            v[1] = new Complex(-3, 9);
            Assert.AreEqual(new Complex(-3, 9), v[1]);
            v[2] = new Complex(-3, -1);
            Assert.AreEqual(new Complex(-3, -1), v[2]);
            v[0] = new Complex(-3, -2);
            Assert.AreEqual(new Complex(-3, -2), v[0]);
            v[2] = new Complex(-3, -3);
            Assert.AreEqual(new Complex(-3, -3), v[2]);
            v[1] = new Complex(-3, -4);
            Assert.AreEqual(new Complex(-3, -4), v[1]);
            v[1] = new Complex(-3, -5);
            Assert.AreEqual(new Complex(-3, -5), v[1]);
            v[1] = new Complex(-3, -6);
            Assert.AreEqual(new Complex(-3, -6), v[1]);
            v[1] = new Complex(-3, -7);
            Assert.AreEqual(new Complex(-3, -7), v[1]);
            v[1] = new Complex(-3, -8);
            Assert.AreEqual(new Complex(-3, -8), v[1]);
            v[0] = new Complex(-3, -9);
            Assert.AreEqual(new Complex(-3, -9), v[0]);
            v[0] = new Complex(-3, -9.5d);
            Assert.AreEqual(new Complex(-3, -9.5d), v[0]);
            v[0] = new Complex(-3, -8.5d);
            Assert.AreEqual(new Complex(-3, -8.5d), v[0]);
            v[0] = new Complex(-3, -7.5d);
            Assert.AreEqual(new Complex(-3, -7.5d), v[0]);
            v[0] = new Complex(-3, -6.5d);
            Assert.AreEqual(new Complex(-3, -6.5d), v[0]);
            v[0] = new Complex(-3, -5.5d);
            Assert.AreEqual(new Complex(-3, -5.5d), v[0]);
            v[2] = new Complex(-3, -4.5d);
            Assert.AreEqual(new Complex(-3, -4.5d), v[2]);
            v[0] = new Complex(-3, -3.5d);
            Assert.AreEqual(new Complex(-3, -3.5d), v[0]);
            v[2] = new Complex(-3, -2.5d);
            Assert.AreEqual(new Complex(-3, -2.5d), v[2]);
            v[2] = new Complex(-3, -1.5d);
            Assert.AreEqual(new Complex(-3, -1.5d), v[2]);
            v[2] = new Complex(-3, -0.5d);
            Assert.AreEqual(new Complex(-3, -0.5d), v[2]);
            v[2] = new Complex(-3, 0.5d);
            Assert.AreEqual(new Complex(-3, 0.5d), v[2]);
            v[2] = new Complex(-3, 1.5d);
            Assert.AreEqual(new Complex(-3, 1.5d), v[2]);
            v[1] = new Complex(-3, 2.5d);
            Assert.AreEqual(new Complex(-3, 2.5d), v[1]);
            v[1] = new Complex(-3, 3.5d);
            Assert.AreEqual(new Complex(-3, 3.5d), v[1]);
            v[1] = new Complex(-3, 4.5d);
            Assert.AreEqual(new Complex(-3, 4.5d), v[1]);
            v[1] = new Complex(-3, 5.5d);
            Assert.AreEqual(new Complex(-3, 5.5d), v[1]);
            v[1] = new Complex(-3, 6.5d);
            Assert.AreEqual(new Complex(-3, 6.5d), v[1]);
            v[2] = new Complex(-3, 7.5d);
            Assert.AreEqual(new Complex(-3, 7.5d), v[2]);
            v[0] = new Complex(-3, 8.5d);
            Assert.AreEqual(new Complex(-3, 8.5d), v[0]);
            v[0] = new Complex(-3, 9.5d);
            Assert.AreEqual(new Complex(-3, 9.5d), v[0]);
            v[2] = new Complex(-4, 0.0);
            Assert.AreEqual(new Complex(-4, 0.0), v[2]);
            v[1] = new Complex(-4, 1.0);
            Assert.AreEqual(new Complex(-4, 1.0), v[1]);
            v[2] = new Complex(-4, 2);
            Assert.AreEqual(new Complex(-4, 2), v[2]);
            v[0] = new Complex(-4, 3);
            Assert.AreEqual(new Complex(-4, 3), v[0]);
            v[0] = new Complex(-4, 4);
            Assert.AreEqual(new Complex(-4, 4), v[0]);
            v[2] = new Complex(-4, 5);
            Assert.AreEqual(new Complex(-4, 5), v[2]);
            v[1] = new Complex(-4, 6);
            Assert.AreEqual(new Complex(-4, 6), v[1]);
            v[1] = new Complex(-4, 7);
            Assert.AreEqual(new Complex(-4, 7), v[1]);
            v[0] = new Complex(-4, 8);
            Assert.AreEqual(new Complex(-4, 8), v[0]);
            v[0] = new Complex(-4, 9);
            Assert.AreEqual(new Complex(-4, 9), v[0]);
            v[2] = new Complex(-4, -1);
            Assert.AreEqual(new Complex(-4, -1), v[2]);
            v[0] = new Complex(-4, -2);
            Assert.AreEqual(new Complex(-4, -2), v[0]);
            v[1] = new Complex(-4, -3);
            Assert.AreEqual(new Complex(-4, -3), v[1]);
            v[0] = new Complex(-4, -4);
            Assert.AreEqual(new Complex(-4, -4), v[0]);
            v[0] = new Complex(-4, -5);
            Assert.AreEqual(new Complex(-4, -5), v[0]);
            v[0] = new Complex(-4, -6);
            Assert.AreEqual(new Complex(-4, -6), v[0]);
            v[0] = new Complex(-4, -7);
            Assert.AreEqual(new Complex(-4, -7), v[0]);
            v[2] = new Complex(-4, -8);
            Assert.AreEqual(new Complex(-4, -8), v[2]);
            v[1] = new Complex(-4, -9);
            Assert.AreEqual(new Complex(-4, -9), v[1]);
            v[0] = new Complex(-4, -9.5d);
            Assert.AreEqual(new Complex(-4, -9.5d), v[0]);
            v[0] = new Complex(-4, -8.5d);
            Assert.AreEqual(new Complex(-4, -8.5d), v[0]);
            v[2] = new Complex(-4, -7.5d);
            Assert.AreEqual(new Complex(-4, -7.5d), v[2]);
            v[0] = new Complex(-4, -6.5d);
            Assert.AreEqual(new Complex(-4, -6.5d), v[0]);
            v[2] = new Complex(-4, -5.5d);
            Assert.AreEqual(new Complex(-4, -5.5d), v[2]);
            v[0] = new Complex(-4, -4.5d);
            Assert.AreEqual(new Complex(-4, -4.5d), v[0]);
            v[2] = new Complex(-4, -3.5d);
            Assert.AreEqual(new Complex(-4, -3.5d), v[2]);
            v[1] = new Complex(-4, -2.5d);
            Assert.AreEqual(new Complex(-4, -2.5d), v[1]);
            v[1] = new Complex(-4, -1.5d);
            Assert.AreEqual(new Complex(-4, -1.5d), v[1]);
            v[0] = new Complex(-4, -0.5d);
            Assert.AreEqual(new Complex(-4, -0.5d), v[0]);
            v[0] = new Complex(-4, 0.5d);
            Assert.AreEqual(new Complex(-4, 0.5d), v[0]);
            v[0] = new Complex(-4, 1.5d);
            Assert.AreEqual(new Complex(-4, 1.5d), v[0]);
            v[1] = new Complex(-4, 2.5d);
            Assert.AreEqual(new Complex(-4, 2.5d), v[1]);
            v[1] = new Complex(-4, 3.5d);
            Assert.AreEqual(new Complex(-4, 3.5d), v[1]);
            v[0] = new Complex(-4, 4.5d);
            Assert.AreEqual(new Complex(-4, 4.5d), v[0]);
            v[0] = new Complex(-4, 5.5d);
            Assert.AreEqual(new Complex(-4, 5.5d), v[0]);
            v[1] = new Complex(-4, 6.5d);
            Assert.AreEqual(new Complex(-4, 6.5d), v[1]);
            v[0] = new Complex(-4, 7.5d);
            Assert.AreEqual(new Complex(-4, 7.5d), v[0]);
            v[2] = new Complex(-4, 8.5d);
            Assert.AreEqual(new Complex(-4, 8.5d), v[2]);
            v[2] = new Complex(-4, 9.5d);
            Assert.AreEqual(new Complex(-4, 9.5d), v[2]);
            v[1] = new Complex(-5, 0.0);
            Assert.AreEqual(new Complex(-5, 0.0), v[1]);
            v[1] = new Complex(-5, 1.0);
            Assert.AreEqual(new Complex(-5, 1.0), v[1]);
            v[2] = new Complex(-5, 2);
            Assert.AreEqual(new Complex(-5, 2), v[2]);
            v[2] = new Complex(-5, 3);
            Assert.AreEqual(new Complex(-5, 3), v[2]);
            v[1] = new Complex(-5, 4);
            Assert.AreEqual(new Complex(-5, 4), v[1]);
            v[0] = new Complex(-5, 5);
            Assert.AreEqual(new Complex(-5, 5), v[0]);
            v[1] = new Complex(-5, 6);
            Assert.AreEqual(new Complex(-5, 6), v[1]);
            v[0] = new Complex(-5, 7);
            Assert.AreEqual(new Complex(-5, 7), v[0]);
            v[0] = new Complex(-5, 8);
            Assert.AreEqual(new Complex(-5, 8), v[0]);
            v[1] = new Complex(-5, 9);
            Assert.AreEqual(new Complex(-5, 9), v[1]);
            v[0] = new Complex(-5, -1);
            Assert.AreEqual(new Complex(-5, -1), v[0]);
            v[0] = new Complex(-5, -2);
            Assert.AreEqual(new Complex(-5, -2), v[0]);
            v[2] = new Complex(-5, -3);
            Assert.AreEqual(new Complex(-5, -3), v[2]);
            v[1] = new Complex(-5, -4);
            Assert.AreEqual(new Complex(-5, -4), v[1]);
            v[0] = new Complex(-5, -5);
            Assert.AreEqual(new Complex(-5, -5), v[0]);
            v[0] = new Complex(-5, -6);
            Assert.AreEqual(new Complex(-5, -6), v[0]);
            v[0] = new Complex(-5, -7);
            Assert.AreEqual(new Complex(-5, -7), v[0]);
            v[1] = new Complex(-5, -8);
            Assert.AreEqual(new Complex(-5, -8), v[1]);
            v[2] = new Complex(-5, -9);
            Assert.AreEqual(new Complex(-5, -9), v[2]);
            v[2] = new Complex(-5, -9.5d);
            Assert.AreEqual(new Complex(-5, -9.5d), v[2]);
            v[1] = new Complex(-5, -8.5d);
            Assert.AreEqual(new Complex(-5, -8.5d), v[1]);
            v[1] = new Complex(-5, -7.5d);
            Assert.AreEqual(new Complex(-5, -7.5d), v[1]);
            v[2] = new Complex(-5, -6.5d);
            Assert.AreEqual(new Complex(-5, -6.5d), v[2]);
            v[0] = new Complex(-5, -5.5d);
            Assert.AreEqual(new Complex(-5, -5.5d), v[0]);
            v[0] = new Complex(-5, -4.5d);
            Assert.AreEqual(new Complex(-5, -4.5d), v[0]);
            v[0] = new Complex(-5, -3.5d);
            Assert.AreEqual(new Complex(-5, -3.5d), v[0]);
            v[0] = new Complex(-5, -2.5d);
            Assert.AreEqual(new Complex(-5, -2.5d), v[0]);
            v[2] = new Complex(-5, -1.5d);
            Assert.AreEqual(new Complex(-5, -1.5d), v[2]);
            v[1] = new Complex(-5, -0.5d);
            Assert.AreEqual(new Complex(-5, -0.5d), v[1]);
            v[0] = new Complex(-5, 0.5d);
            Assert.AreEqual(new Complex(-5, 0.5d), v[0]);
            v[1] = new Complex(-5, 1.5d);
            Assert.AreEqual(new Complex(-5, 1.5d), v[1]);
            v[0] = new Complex(-5, 2.5d);
            Assert.AreEqual(new Complex(-5, 2.5d), v[0]);
            v[1] = new Complex(-5, 3.5d);
            Assert.AreEqual(new Complex(-5, 3.5d), v[1]);
            v[2] = new Complex(-5, 4.5d);
            Assert.AreEqual(new Complex(-5, 4.5d), v[2]);
            v[2] = new Complex(-5, 5.5d);
            Assert.AreEqual(new Complex(-5, 5.5d), v[2]);
            v[2] = new Complex(-5, 6.5d);
            Assert.AreEqual(new Complex(-5, 6.5d), v[2]);
            v[1] = new Complex(-5, 7.5d);
            Assert.AreEqual(new Complex(-5, 7.5d), v[1]);
            v[0] = new Complex(-5, 8.5d);
            Assert.AreEqual(new Complex(-5, 8.5d), v[0]);
            v[2] = new Complex(-5, 9.5d);
            Assert.AreEqual(new Complex(-5, 9.5d), v[2]);
            v[2] = new Complex(-6, 0.0);
            Assert.AreEqual(new Complex(-6, 0.0), v[2]);
            v[1] = new Complex(-6, 1.0);
            Assert.AreEqual(new Complex(-6, 1.0), v[1]);
            v[2] = new Complex(-6, 2);
            Assert.AreEqual(new Complex(-6, 2), v[2]);
            v[0] = new Complex(-6, 3);
            Assert.AreEqual(new Complex(-6, 3), v[0]);
            v[0] = new Complex(-6, 4);
            Assert.AreEqual(new Complex(-6, 4), v[0]);
            v[0] = new Complex(-6, 5);
            Assert.AreEqual(new Complex(-6, 5), v[0]);
            v[2] = new Complex(-6, 6);
            Assert.AreEqual(new Complex(-6, 6), v[2]);
            v[1] = new Complex(-6, 7);
            Assert.AreEqual(new Complex(-6, 7), v[1]);
            v[2] = new Complex(-6, 8);
            Assert.AreEqual(new Complex(-6, 8), v[2]);
            v[0] = new Complex(-6, 9);
            Assert.AreEqual(new Complex(-6, 9), v[0]);
            v[0] = new Complex(-6, -1);
            Assert.AreEqual(new Complex(-6, -1), v[0]);
            v[0] = new Complex(-6, -2);
            Assert.AreEqual(new Complex(-6, -2), v[0]);
            v[0] = new Complex(-6, -3);
            Assert.AreEqual(new Complex(-6, -3), v[0]);
            v[1] = new Complex(-6, -4);
            Assert.AreEqual(new Complex(-6, -4), v[1]);
            v[2] = new Complex(-6, -5);
            Assert.AreEqual(new Complex(-6, -5), v[2]);
            v[1] = new Complex(-6, -6);
            Assert.AreEqual(new Complex(-6, -6), v[1]);
            v[0] = new Complex(-6, -7);
            Assert.AreEqual(new Complex(-6, -7), v[0]);
            v[1] = new Complex(-6, -8);
            Assert.AreEqual(new Complex(-6, -8), v[1]);
            v[1] = new Complex(-6, -9);
            Assert.AreEqual(new Complex(-6, -9), v[1]);
            v[2] = new Complex(-6, -9.5d);
            Assert.AreEqual(new Complex(-6, -9.5d), v[2]);
            v[1] = new Complex(-6, -8.5d);
            Assert.AreEqual(new Complex(-6, -8.5d), v[1]);
            v[2] = new Complex(-6, -7.5d);
            Assert.AreEqual(new Complex(-6, -7.5d), v[2]);
            v[2] = new Complex(-6, -6.5d);
            Assert.AreEqual(new Complex(-6, -6.5d), v[2]);
            v[1] = new Complex(-6, -5.5d);
            Assert.AreEqual(new Complex(-6, -5.5d), v[1]);
            v[0] = new Complex(-6, -4.5d);
            Assert.AreEqual(new Complex(-6, -4.5d), v[0]);
            v[2] = new Complex(-6, -3.5d);
            Assert.AreEqual(new Complex(-6, -3.5d), v[2]);
            v[0] = new Complex(-6, -2.5d);
            Assert.AreEqual(new Complex(-6, -2.5d), v[0]);
            v[2] = new Complex(-6, -1.5d);
            Assert.AreEqual(new Complex(-6, -1.5d), v[2]);
            v[2] = new Complex(-6, -0.5d);
            Assert.AreEqual(new Complex(-6, -0.5d), v[2]);
            v[1] = new Complex(-6, 0.5d);
            Assert.AreEqual(new Complex(-6, 0.5d), v[1]);
            v[0] = new Complex(-6, 1.5d);
            Assert.AreEqual(new Complex(-6, 1.5d), v[0]);
            v[1] = new Complex(-6, 2.5d);
            Assert.AreEqual(new Complex(-6, 2.5d), v[1]);
            v[2] = new Complex(-6, 3.5d);
            Assert.AreEqual(new Complex(-6, 3.5d), v[2]);
            v[1] = new Complex(-6, 4.5d);
            Assert.AreEqual(new Complex(-6, 4.5d), v[1]);
            v[2] = new Complex(-6, 5.5d);
            Assert.AreEqual(new Complex(-6, 5.5d), v[2]);
            v[1] = new Complex(-6, 6.5d);
            Assert.AreEqual(new Complex(-6, 6.5d), v[1]);
            v[1] = new Complex(-6, 7.5d);
            Assert.AreEqual(new Complex(-6, 7.5d), v[1]);
            v[0] = new Complex(-6, 8.5d);
            Assert.AreEqual(new Complex(-6, 8.5d), v[0]);
            v[2] = new Complex(-6, 9.5d);
            Assert.AreEqual(new Complex(-6, 9.5d), v[2]);
            v[2] = new Complex(-7, 0.0);
            Assert.AreEqual(new Complex(-7, 0.0), v[2]);
            v[1] = new Complex(-7, 1.0);
            Assert.AreEqual(new Complex(-7, 1.0), v[1]);
            v[1] = new Complex(-7, 2);
            Assert.AreEqual(new Complex(-7, 2), v[1]);
            v[1] = new Complex(-7, 3);
            Assert.AreEqual(new Complex(-7, 3), v[1]);
            v[1] = new Complex(-7, 4);
            Assert.AreEqual(new Complex(-7, 4), v[1]);
            v[1] = new Complex(-7, 5);
            Assert.AreEqual(new Complex(-7, 5), v[1]);
            v[2] = new Complex(-7, 6);
            Assert.AreEqual(new Complex(-7, 6), v[2]);
            v[1] = new Complex(-7, 7);
            Assert.AreEqual(new Complex(-7, 7), v[1]);
            v[1] = new Complex(-7, 8);
            Assert.AreEqual(new Complex(-7, 8), v[1]);
            v[1] = new Complex(-7, 9);
            Assert.AreEqual(new Complex(-7, 9), v[1]);
            v[0] = new Complex(-7, -1);
            Assert.AreEqual(new Complex(-7, -1), v[0]);
            v[2] = new Complex(-7, -2);
            Assert.AreEqual(new Complex(-7, -2), v[2]);
            v[0] = new Complex(-7, -3);
            Assert.AreEqual(new Complex(-7, -3), v[0]);
            v[2] = new Complex(-7, -4);
            Assert.AreEqual(new Complex(-7, -4), v[2]);
            v[1] = new Complex(-7, -5);
            Assert.AreEqual(new Complex(-7, -5), v[1]);
            v[1] = new Complex(-7, -6);
            Assert.AreEqual(new Complex(-7, -6), v[1]);
            v[0] = new Complex(-7, -7);
            Assert.AreEqual(new Complex(-7, -7), v[0]);
            v[2] = new Complex(-7, -8);
            Assert.AreEqual(new Complex(-7, -8), v[2]);
            v[0] = new Complex(-7, -9);
            Assert.AreEqual(new Complex(-7, -9), v[0]);
            v[2] = new Complex(-7, -9.5d);
            Assert.AreEqual(new Complex(-7, -9.5d), v[2]);
            v[1] = new Complex(-7, -8.5d);
            Assert.AreEqual(new Complex(-7, -8.5d), v[1]);
            v[0] = new Complex(-7, -7.5d);
            Assert.AreEqual(new Complex(-7, -7.5d), v[0]);
            v[2] = new Complex(-7, -6.5d);
            Assert.AreEqual(new Complex(-7, -6.5d), v[2]);
            v[2] = new Complex(-7, -5.5d);
            Assert.AreEqual(new Complex(-7, -5.5d), v[2]);
            v[0] = new Complex(-7, -4.5d);
            Assert.AreEqual(new Complex(-7, -4.5d), v[0]);
            v[0] = new Complex(-7, -3.5d);
            Assert.AreEqual(new Complex(-7, -3.5d), v[0]);
            v[1] = new Complex(-7, -2.5d);
            Assert.AreEqual(new Complex(-7, -2.5d), v[1]);
            v[0] = new Complex(-7, -1.5d);
            Assert.AreEqual(new Complex(-7, -1.5d), v[0]);
            v[1] = new Complex(-7, -0.5d);
            Assert.AreEqual(new Complex(-7, -0.5d), v[1]);
            v[1] = new Complex(-7, 0.5d);
            Assert.AreEqual(new Complex(-7, 0.5d), v[1]);
            v[1] = new Complex(-7, 1.5d);
            Assert.AreEqual(new Complex(-7, 1.5d), v[1]);
            v[2] = new Complex(-7, 2.5d);
            Assert.AreEqual(new Complex(-7, 2.5d), v[2]);
            v[2] = new Complex(-7, 3.5d);
            Assert.AreEqual(new Complex(-7, 3.5d), v[2]);
            v[2] = new Complex(-7, 4.5d);
            Assert.AreEqual(new Complex(-7, 4.5d), v[2]);
            v[2] = new Complex(-7, 5.5d);
            Assert.AreEqual(new Complex(-7, 5.5d), v[2]);
            v[1] = new Complex(-7, 6.5d);
            Assert.AreEqual(new Complex(-7, 6.5d), v[1]);
            v[2] = new Complex(-7, 7.5d);
            Assert.AreEqual(new Complex(-7, 7.5d), v[2]);
            v[1] = new Complex(-7, 8.5d);
            Assert.AreEqual(new Complex(-7, 8.5d), v[1]);
            v[1] = new Complex(-7, 9.5d);
            Assert.AreEqual(new Complex(-7, 9.5d), v[1]);
            v[0] = new Complex(-8, 0.0);
            Assert.AreEqual(new Complex(-8, 0.0), v[0]);
            v[0] = new Complex(-8, 1.0);
            Assert.AreEqual(new Complex(-8, 1.0), v[0]);
            v[0] = new Complex(-8, 2);
            Assert.AreEqual(new Complex(-8, 2), v[0]);
            v[1] = new Complex(-8, 3);
            Assert.AreEqual(new Complex(-8, 3), v[1]);
            v[0] = new Complex(-8, 4);
            Assert.AreEqual(new Complex(-8, 4), v[0]);
            v[1] = new Complex(-8, 5);
            Assert.AreEqual(new Complex(-8, 5), v[1]);
            v[2] = new Complex(-8, 6);
            Assert.AreEqual(new Complex(-8, 6), v[2]);
            v[2] = new Complex(-8, 7);
            Assert.AreEqual(new Complex(-8, 7), v[2]);
            v[2] = new Complex(-8, 8);
            Assert.AreEqual(new Complex(-8, 8), v[2]);
            v[1] = new Complex(-8, 9);
            Assert.AreEqual(new Complex(-8, 9), v[1]);
            v[0] = new Complex(-8, -1);
            Assert.AreEqual(new Complex(-8, -1), v[0]);
            v[2] = new Complex(-8, -2);
            Assert.AreEqual(new Complex(-8, -2), v[2]);
            v[2] = new Complex(-8, -3);
            Assert.AreEqual(new Complex(-8, -3), v[2]);
            v[1] = new Complex(-8, -4);
            Assert.AreEqual(new Complex(-8, -4), v[1]);
            v[1] = new Complex(-8, -5);
            Assert.AreEqual(new Complex(-8, -5), v[1]);
            v[1] = new Complex(-8, -6);
            Assert.AreEqual(new Complex(-8, -6), v[1]);
            v[2] = new Complex(-8, -7);
            Assert.AreEqual(new Complex(-8, -7), v[2]);
            v[1] = new Complex(-8, -8);
            Assert.AreEqual(new Complex(-8, -8), v[1]);
            v[2] = new Complex(-8, -9);
            Assert.AreEqual(new Complex(-8, -9), v[2]);
            v[0] = new Complex(-8, -9.5d);
            Assert.AreEqual(new Complex(-8, -9.5d), v[0]);
            v[0] = new Complex(-8, -8.5d);
            Assert.AreEqual(new Complex(-8, -8.5d), v[0]);
            v[2] = new Complex(-8, -7.5d);
            Assert.AreEqual(new Complex(-8, -7.5d), v[2]);
            v[2] = new Complex(-8, -6.5d);
            Assert.AreEqual(new Complex(-8, -6.5d), v[2]);
            v[2] = new Complex(-8, -5.5d);
            Assert.AreEqual(new Complex(-8, -5.5d), v[2]);
            v[0] = new Complex(-8, -4.5d);
            Assert.AreEqual(new Complex(-8, -4.5d), v[0]);
            v[0] = new Complex(-8, -3.5d);
            Assert.AreEqual(new Complex(-8, -3.5d), v[0]);
            v[1] = new Complex(-8, -2.5d);
            Assert.AreEqual(new Complex(-8, -2.5d), v[1]);
            v[0] = new Complex(-8, -1.5d);
            Assert.AreEqual(new Complex(-8, -1.5d), v[0]);
            v[1] = new Complex(-8, -0.5d);
            Assert.AreEqual(new Complex(-8, -0.5d), v[1]);
            v[0] = new Complex(-8, 0.5d);
            Assert.AreEqual(new Complex(-8, 0.5d), v[0]);
            v[0] = new Complex(-8, 1.5d);
            Assert.AreEqual(new Complex(-8, 1.5d), v[0]);
            v[1] = new Complex(-8, 2.5d);
            Assert.AreEqual(new Complex(-8, 2.5d), v[1]);
            v[2] = new Complex(-8, 3.5d);
            Assert.AreEqual(new Complex(-8, 3.5d), v[2]);
            v[0] = new Complex(-8, 4.5d);
            Assert.AreEqual(new Complex(-8, 4.5d), v[0]);
            v[2] = new Complex(-8, 5.5d);
            Assert.AreEqual(new Complex(-8, 5.5d), v[2]);
            v[2] = new Complex(-8, 6.5d);
            Assert.AreEqual(new Complex(-8, 6.5d), v[2]);
            v[0] = new Complex(-8, 7.5d);
            Assert.AreEqual(new Complex(-8, 7.5d), v[0]);
            v[1] = new Complex(-8, 8.5d);
            Assert.AreEqual(new Complex(-8, 8.5d), v[1]);
            v[1] = new Complex(-8, 9.5d);
            Assert.AreEqual(new Complex(-8, 9.5d), v[1]);
            v[0] = new Complex(-9, 0.0);
            Assert.AreEqual(new Complex(-9, 0.0), v[0]);
            v[1] = new Complex(-9, 1.0);
            Assert.AreEqual(new Complex(-9, 1.0), v[1]);
            v[0] = new Complex(-9, 2);
            Assert.AreEqual(new Complex(-9, 2), v[0]);
            v[2] = new Complex(-9, 3);
            Assert.AreEqual(new Complex(-9, 3), v[2]);
            v[2] = new Complex(-9, 4);
            Assert.AreEqual(new Complex(-9, 4), v[2]);
            v[1] = new Complex(-9, 5);
            Assert.AreEqual(new Complex(-9, 5), v[1]);
            v[1] = new Complex(-9, 6);
            Assert.AreEqual(new Complex(-9, 6), v[1]);
            v[1] = new Complex(-9, 7);
            Assert.AreEqual(new Complex(-9, 7), v[1]);
            v[0] = new Complex(-9, 8);
            Assert.AreEqual(new Complex(-9, 8), v[0]);
            v[1] = new Complex(-9, 9);
            Assert.AreEqual(new Complex(-9, 9), v[1]);
            v[0] = new Complex(-9, -1);
            Assert.AreEqual(new Complex(-9, -1), v[0]);
            v[2] = new Complex(-9, -2);
            Assert.AreEqual(new Complex(-9, -2), v[2]);
            v[2] = new Complex(-9, -3);
            Assert.AreEqual(new Complex(-9, -3), v[2]);
            v[2] = new Complex(-9, -4);
            Assert.AreEqual(new Complex(-9, -4), v[2]);
            v[1] = new Complex(-9, -5);
            Assert.AreEqual(new Complex(-9, -5), v[1]);
            v[0] = new Complex(-9, -6);
            Assert.AreEqual(new Complex(-9, -6), v[0]);
            v[0] = new Complex(-9, -7);
            Assert.AreEqual(new Complex(-9, -7), v[0]);
            v[1] = new Complex(-9, -8);
            Assert.AreEqual(new Complex(-9, -8), v[1]);
            v[1] = new Complex(-9, -9);
            Assert.AreEqual(new Complex(-9, -9), v[1]);
            v[0] = new Complex(-9, -9.5d);
            Assert.AreEqual(new Complex(-9, -9.5d), v[0]);
            v[0] = new Complex(-9, -8.5d);
            Assert.AreEqual(new Complex(-9, -8.5d), v[0]);
            v[0] = new Complex(-9, -7.5d);
            Assert.AreEqual(new Complex(-9, -7.5d), v[0]);
            v[2] = new Complex(-9, -6.5d);
            Assert.AreEqual(new Complex(-9, -6.5d), v[2]);
            v[1] = new Complex(-9, -5.5d);
            Assert.AreEqual(new Complex(-9, -5.5d), v[1]);
            v[1] = new Complex(-9, -4.5d);
            Assert.AreEqual(new Complex(-9, -4.5d), v[1]);
            v[1] = new Complex(-9, -3.5d);
            Assert.AreEqual(new Complex(-9, -3.5d), v[1]);
            v[1] = new Complex(-9, -2.5d);
            Assert.AreEqual(new Complex(-9, -2.5d), v[1]);
            v[2] = new Complex(-9, -1.5d);
            Assert.AreEqual(new Complex(-9, -1.5d), v[2]);
            v[1] = new Complex(-9, -0.5d);
            Assert.AreEqual(new Complex(-9, -0.5d), v[1]);
            v[1] = new Complex(-9, 0.5d);
            Assert.AreEqual(new Complex(-9, 0.5d), v[1]);
            v[2] = new Complex(-9, 1.5d);
            Assert.AreEqual(new Complex(-9, 1.5d), v[2]);
            v[0] = new Complex(-9, 2.5d);
            Assert.AreEqual(new Complex(-9, 2.5d), v[0]);
            v[1] = new Complex(-9, 3.5d);
            Assert.AreEqual(new Complex(-9, 3.5d), v[1]);
            v[2] = new Complex(-9, 4.5d);
            Assert.AreEqual(new Complex(-9, 4.5d), v[2]);
            v[2] = new Complex(-9, 5.5d);
            Assert.AreEqual(new Complex(-9, 5.5d), v[2]);
            v[1] = new Complex(-9, 6.5d);
            Assert.AreEqual(new Complex(-9, 6.5d), v[1]);
            v[0] = new Complex(-9, 7.5d);
            Assert.AreEqual(new Complex(-9, 7.5d), v[0]);
            v[0] = new Complex(-9, 8.5d);
            Assert.AreEqual(new Complex(-9, 8.5d), v[0]);
            v[2] = new Complex(-9, 9.5d);
            Assert.AreEqual(new Complex(-9, 9.5d), v[2]);
            v[1] = new Complex(-9.5d, 0.0);
            Assert.AreEqual(new Complex(-9.5d, 0.0), v[1]);
            v[2] = new Complex(-9.5d, 1.0);
            Assert.AreEqual(new Complex(-9.5d, 1.0), v[2]);
            v[1] = new Complex(-9.5d, 2);
            Assert.AreEqual(new Complex(-9.5d, 2), v[1]);
            v[0] = new Complex(-9.5d, 3);
            Assert.AreEqual(new Complex(-9.5d, 3), v[0]);
            v[1] = new Complex(-9.5d, 4);
            Assert.AreEqual(new Complex(-9.5d, 4), v[1]);
            v[0] = new Complex(-9.5d, 5);
            Assert.AreEqual(new Complex(-9.5d, 5), v[0]);
            v[1] = new Complex(-9.5d, 6);
            Assert.AreEqual(new Complex(-9.5d, 6), v[1]);
            v[0] = new Complex(-9.5d, 7);
            Assert.AreEqual(new Complex(-9.5d, 7), v[0]);
            v[1] = new Complex(-9.5d, 8);
            Assert.AreEqual(new Complex(-9.5d, 8), v[1]);
            v[1] = new Complex(-9.5d, 9);
            Assert.AreEqual(new Complex(-9.5d, 9), v[1]);
            v[0] = new Complex(-9.5d, -1);
            Assert.AreEqual(new Complex(-9.5d, -1), v[0]);
            v[1] = new Complex(-9.5d, -2);
            Assert.AreEqual(new Complex(-9.5d, -2), v[1]);
            v[0] = new Complex(-9.5d, -3);
            Assert.AreEqual(new Complex(-9.5d, -3), v[0]);
            v[2] = new Complex(-9.5d, -4);
            Assert.AreEqual(new Complex(-9.5d, -4), v[2]);
            v[1] = new Complex(-9.5d, -5);
            Assert.AreEqual(new Complex(-9.5d, -5), v[1]);
            v[1] = new Complex(-9.5d, -6);
            Assert.AreEqual(new Complex(-9.5d, -6), v[1]);
            v[0] = new Complex(-9.5d, -7);
            Assert.AreEqual(new Complex(-9.5d, -7), v[0]);
            v[2] = new Complex(-9.5d, -8);
            Assert.AreEqual(new Complex(-9.5d, -8), v[2]);
            v[2] = new Complex(-9.5d, -9);
            Assert.AreEqual(new Complex(-9.5d, -9), v[2]);
            v[0] = new Complex(-9.5d, -9.5d);
            Assert.AreEqual(new Complex(-9.5d, -9.5d), v[0]);
            v[1] = new Complex(-9.5d, -8.5d);
            Assert.AreEqual(new Complex(-9.5d, -8.5d), v[1]);
            v[2] = new Complex(-9.5d, -7.5d);
            Assert.AreEqual(new Complex(-9.5d, -7.5d), v[2]);
            v[1] = new Complex(-9.5d, -6.5d);
            Assert.AreEqual(new Complex(-9.5d, -6.5d), v[1]);
            v[0] = new Complex(-9.5d, -5.5d);
            Assert.AreEqual(new Complex(-9.5d, -5.5d), v[0]);
            v[2] = new Complex(-9.5d, -4.5d);
            Assert.AreEqual(new Complex(-9.5d, -4.5d), v[2]);
            v[2] = new Complex(-9.5d, -3.5d);
            Assert.AreEqual(new Complex(-9.5d, -3.5d), v[2]);
            v[0] = new Complex(-9.5d, -2.5d);
            Assert.AreEqual(new Complex(-9.5d, -2.5d), v[0]);
            v[0] = new Complex(-9.5d, -1.5d);
            Assert.AreEqual(new Complex(-9.5d, -1.5d), v[0]);
            v[2] = new Complex(-9.5d, -0.5d);
            Assert.AreEqual(new Complex(-9.5d, -0.5d), v[2]);
            v[0] = new Complex(-9.5d, 0.5d);
            Assert.AreEqual(new Complex(-9.5d, 0.5d), v[0]);
            v[2] = new Complex(-9.5d, 1.5d);
            Assert.AreEqual(new Complex(-9.5d, 1.5d), v[2]);
            v[0] = new Complex(-9.5d, 2.5d);
            Assert.AreEqual(new Complex(-9.5d, 2.5d), v[0]);
            v[0] = new Complex(-9.5d, 3.5d);
            Assert.AreEqual(new Complex(-9.5d, 3.5d), v[0]);
            v[1] = new Complex(-9.5d, 4.5d);
            Assert.AreEqual(new Complex(-9.5d, 4.5d), v[1]);
            v[2] = new Complex(-9.5d, 5.5d);
            Assert.AreEqual(new Complex(-9.5d, 5.5d), v[2]);
            v[1] = new Complex(-9.5d, 6.5d);
            Assert.AreEqual(new Complex(-9.5d, 6.5d), v[1]);
            v[1] = new Complex(-9.5d, 7.5d);
            Assert.AreEqual(new Complex(-9.5d, 7.5d), v[1]);
            v[2] = new Complex(-9.5d, 8.5d);
            Assert.AreEqual(new Complex(-9.5d, 8.5d), v[2]);
            v[0] = new Complex(-9.5d, 9.5d);
            Assert.AreEqual(new Complex(-9.5d, 9.5d), v[0]);
            v[0] = new Complex(-8.5d, 0.0);
            Assert.AreEqual(new Complex(-8.5d, 0.0), v[0]);
            v[0] = new Complex(-8.5d, 1.0);
            Assert.AreEqual(new Complex(-8.5d, 1.0), v[0]);
            v[0] = new Complex(-8.5d, 2);
            Assert.AreEqual(new Complex(-8.5d, 2), v[0]);
            v[2] = new Complex(-8.5d, 3);
            Assert.AreEqual(new Complex(-8.5d, 3), v[2]);
            v[1] = new Complex(-8.5d, 4);
            Assert.AreEqual(new Complex(-8.5d, 4), v[1]);
            v[1] = new Complex(-8.5d, 5);
            Assert.AreEqual(new Complex(-8.5d, 5), v[1]);
            v[0] = new Complex(-8.5d, 6);
            Assert.AreEqual(new Complex(-8.5d, 6), v[0]);
            v[1] = new Complex(-8.5d, 7);
            Assert.AreEqual(new Complex(-8.5d, 7), v[1]);
            v[1] = new Complex(-8.5d, 8);
            Assert.AreEqual(new Complex(-8.5d, 8), v[1]);
            v[0] = new Complex(-8.5d, 9);
            Assert.AreEqual(new Complex(-8.5d, 9), v[0]);
            v[1] = new Complex(-8.5d, -1);
            Assert.AreEqual(new Complex(-8.5d, -1), v[1]);
            v[1] = new Complex(-8.5d, -2);
            Assert.AreEqual(new Complex(-8.5d, -2), v[1]);
            v[1] = new Complex(-8.5d, -3);
            Assert.AreEqual(new Complex(-8.5d, -3), v[1]);
            v[0] = new Complex(-8.5d, -4);
            Assert.AreEqual(new Complex(-8.5d, -4), v[0]);
            v[2] = new Complex(-8.5d, -5);
            Assert.AreEqual(new Complex(-8.5d, -5), v[2]);
            v[1] = new Complex(-8.5d, -6);
            Assert.AreEqual(new Complex(-8.5d, -6), v[1]);
            v[2] = new Complex(-8.5d, -7);
            Assert.AreEqual(new Complex(-8.5d, -7), v[2]);
            v[0] = new Complex(-8.5d, -8);
            Assert.AreEqual(new Complex(-8.5d, -8), v[0]);
            v[1] = new Complex(-8.5d, -9);
            Assert.AreEqual(new Complex(-8.5d, -9), v[1]);
            v[1] = new Complex(-8.5d, -9.5d);
            Assert.AreEqual(new Complex(-8.5d, -9.5d), v[1]);
            v[2] = new Complex(-8.5d, -8.5d);
            Assert.AreEqual(new Complex(-8.5d, -8.5d), v[2]);
            v[0] = new Complex(-8.5d, -7.5d);
            Assert.AreEqual(new Complex(-8.5d, -7.5d), v[0]);
            v[0] = new Complex(-8.5d, -6.5d);
            Assert.AreEqual(new Complex(-8.5d, -6.5d), v[0]);
            v[0] = new Complex(-8.5d, -5.5d);
            Assert.AreEqual(new Complex(-8.5d, -5.5d), v[0]);
            v[1] = new Complex(-8.5d, -4.5d);
            Assert.AreEqual(new Complex(-8.5d, -4.5d), v[1]);
            v[1] = new Complex(-8.5d, -3.5d);
            Assert.AreEqual(new Complex(-8.5d, -3.5d), v[1]);
            v[0] = new Complex(-8.5d, -2.5d);
            Assert.AreEqual(new Complex(-8.5d, -2.5d), v[0]);
            v[1] = new Complex(-8.5d, -1.5d);
            Assert.AreEqual(new Complex(-8.5d, -1.5d), v[1]);
            v[2] = new Complex(-8.5d, -0.5d);
            Assert.AreEqual(new Complex(-8.5d, -0.5d), v[2]);
            v[2] = new Complex(-8.5d, 0.5d);
            Assert.AreEqual(new Complex(-8.5d, 0.5d), v[2]);
            v[2] = new Complex(-8.5d, 1.5d);
            Assert.AreEqual(new Complex(-8.5d, 1.5d), v[2]);
            v[2] = new Complex(-8.5d, 2.5d);
            Assert.AreEqual(new Complex(-8.5d, 2.5d), v[2]);
            v[0] = new Complex(-8.5d, 3.5d);
            Assert.AreEqual(new Complex(-8.5d, 3.5d), v[0]);
            v[2] = new Complex(-8.5d, 4.5d);
            Assert.AreEqual(new Complex(-8.5d, 4.5d), v[2]);
            v[2] = new Complex(-8.5d, 5.5d);
            Assert.AreEqual(new Complex(-8.5d, 5.5d), v[2]);
            v[0] = new Complex(-8.5d, 6.5d);
            Assert.AreEqual(new Complex(-8.5d, 6.5d), v[0]);
            v[0] = new Complex(-8.5d, 7.5d);
            Assert.AreEqual(new Complex(-8.5d, 7.5d), v[0]);
            v[2] = new Complex(-8.5d, 8.5d);
            Assert.AreEqual(new Complex(-8.5d, 8.5d), v[2]);
            v[0] = new Complex(-8.5d, 9.5d);
            Assert.AreEqual(new Complex(-8.5d, 9.5d), v[0]);
            v[2] = new Complex(-7.5d, 0.0);
            Assert.AreEqual(new Complex(-7.5d, 0.0), v[2]);
            v[2] = new Complex(-7.5d, 1.0);
            Assert.AreEqual(new Complex(-7.5d, 1.0), v[2]);
            v[0] = new Complex(-7.5d, 2);
            Assert.AreEqual(new Complex(-7.5d, 2), v[0]);
            v[1] = new Complex(-7.5d, 3);
            Assert.AreEqual(new Complex(-7.5d, 3), v[1]);
            v[0] = new Complex(-7.5d, 4);
            Assert.AreEqual(new Complex(-7.5d, 4), v[0]);
            v[1] = new Complex(-7.5d, 5);
            Assert.AreEqual(new Complex(-7.5d, 5), v[1]);
            v[2] = new Complex(-7.5d, 6);
            Assert.AreEqual(new Complex(-7.5d, 6), v[2]);
            v[0] = new Complex(-7.5d, 7);
            Assert.AreEqual(new Complex(-7.5d, 7), v[0]);
            v[2] = new Complex(-7.5d, 8);
            Assert.AreEqual(new Complex(-7.5d, 8), v[2]);
            v[0] = new Complex(-7.5d, 9);
            Assert.AreEqual(new Complex(-7.5d, 9), v[0]);
            v[2] = new Complex(-7.5d, -1);
            Assert.AreEqual(new Complex(-7.5d, -1), v[2]);
            v[0] = new Complex(-7.5d, -2);
            Assert.AreEqual(new Complex(-7.5d, -2), v[0]);
            v[1] = new Complex(-7.5d, -3);
            Assert.AreEqual(new Complex(-7.5d, -3), v[1]);
            v[0] = new Complex(-7.5d, -4);
            Assert.AreEqual(new Complex(-7.5d, -4), v[0]);
            v[1] = new Complex(-7.5d, -5);
            Assert.AreEqual(new Complex(-7.5d, -5), v[1]);
            v[0] = new Complex(-7.5d, -6);
            Assert.AreEqual(new Complex(-7.5d, -6), v[0]);
            v[2] = new Complex(-7.5d, -7);
            Assert.AreEqual(new Complex(-7.5d, -7), v[2]);
            v[0] = new Complex(-7.5d, -8);
            Assert.AreEqual(new Complex(-7.5d, -8), v[0]);
            v[2] = new Complex(-7.5d, -9);
            Assert.AreEqual(new Complex(-7.5d, -9), v[2]);
            v[1] = new Complex(-7.5d, -9.5d);
            Assert.AreEqual(new Complex(-7.5d, -9.5d), v[1]);
            v[2] = new Complex(-7.5d, -8.5d);
            Assert.AreEqual(new Complex(-7.5d, -8.5d), v[2]);
            v[0] = new Complex(-7.5d, -7.5d);
            Assert.AreEqual(new Complex(-7.5d, -7.5d), v[0]);
            v[1] = new Complex(-7.5d, -6.5d);
            Assert.AreEqual(new Complex(-7.5d, -6.5d), v[1]);
            v[2] = new Complex(-7.5d, -5.5d);
            Assert.AreEqual(new Complex(-7.5d, -5.5d), v[2]);
            v[1] = new Complex(-7.5d, -4.5d);
            Assert.AreEqual(new Complex(-7.5d, -4.5d), v[1]);
            v[0] = new Complex(-7.5d, -3.5d);
            Assert.AreEqual(new Complex(-7.5d, -3.5d), v[0]);
            v[2] = new Complex(-7.5d, -2.5d);
            Assert.AreEqual(new Complex(-7.5d, -2.5d), v[2]);
            v[1] = new Complex(-7.5d, -1.5d);
            Assert.AreEqual(new Complex(-7.5d, -1.5d), v[1]);
            v[2] = new Complex(-7.5d, -0.5d);
            Assert.AreEqual(new Complex(-7.5d, -0.5d), v[2]);
            v[1] = new Complex(-7.5d, 0.5d);
            Assert.AreEqual(new Complex(-7.5d, 0.5d), v[1]);
            v[2] = new Complex(-7.5d, 1.5d);
            Assert.AreEqual(new Complex(-7.5d, 1.5d), v[2]);
            v[0] = new Complex(-7.5d, 2.5d);
            Assert.AreEqual(new Complex(-7.5d, 2.5d), v[0]);
            v[0] = new Complex(-7.5d, 3.5d);
            Assert.AreEqual(new Complex(-7.5d, 3.5d), v[0]);
            v[2] = new Complex(-7.5d, 4.5d);
            Assert.AreEqual(new Complex(-7.5d, 4.5d), v[2]);
            v[1] = new Complex(-7.5d, 5.5d);
            Assert.AreEqual(new Complex(-7.5d, 5.5d), v[1]);
            v[2] = new Complex(-7.5d, 6.5d);
            Assert.AreEqual(new Complex(-7.5d, 6.5d), v[2]);
            v[1] = new Complex(-7.5d, 7.5d);
            Assert.AreEqual(new Complex(-7.5d, 7.5d), v[1]);
            v[2] = new Complex(-7.5d, 8.5d);
            Assert.AreEqual(new Complex(-7.5d, 8.5d), v[2]);
            v[2] = new Complex(-7.5d, 9.5d);
            Assert.AreEqual(new Complex(-7.5d, 9.5d), v[2]);
            v[2] = new Complex(-6.5d, 0.0);
            Assert.AreEqual(new Complex(-6.5d, 0.0), v[2]);
            v[2] = new Complex(-6.5d, 1.0);
            Assert.AreEqual(new Complex(-6.5d, 1.0), v[2]);
            v[1] = new Complex(-6.5d, 2);
            Assert.AreEqual(new Complex(-6.5d, 2), v[1]);
            v[0] = new Complex(-6.5d, 3);
            Assert.AreEqual(new Complex(-6.5d, 3), v[0]);
            v[1] = new Complex(-6.5d, 4);
            Assert.AreEqual(new Complex(-6.5d, 4), v[1]);
            v[2] = new Complex(-6.5d, 5);
            Assert.AreEqual(new Complex(-6.5d, 5), v[2]);
            v[2] = new Complex(-6.5d, 6);
            Assert.AreEqual(new Complex(-6.5d, 6), v[2]);
            v[1] = new Complex(-6.5d, 7);
            Assert.AreEqual(new Complex(-6.5d, 7), v[1]);
            v[1] = new Complex(-6.5d, 8);
            Assert.AreEqual(new Complex(-6.5d, 8), v[1]);
            v[1] = new Complex(-6.5d, 9);
            Assert.AreEqual(new Complex(-6.5d, 9), v[1]);
            v[1] = new Complex(-6.5d, -1);
            Assert.AreEqual(new Complex(-6.5d, -1), v[1]);
            v[2] = new Complex(-6.5d, -2);
            Assert.AreEqual(new Complex(-6.5d, -2), v[2]);
            v[0] = new Complex(-6.5d, -3);
            Assert.AreEqual(new Complex(-6.5d, -3), v[0]);
            v[0] = new Complex(-6.5d, -4);
            Assert.AreEqual(new Complex(-6.5d, -4), v[0]);
            v[0] = new Complex(-6.5d, -5);
            Assert.AreEqual(new Complex(-6.5d, -5), v[0]);
            v[0] = new Complex(-6.5d, -6);
            Assert.AreEqual(new Complex(-6.5d, -6), v[0]);
            v[1] = new Complex(-6.5d, -7);
            Assert.AreEqual(new Complex(-6.5d, -7), v[1]);
            v[0] = new Complex(-6.5d, -8);
            Assert.AreEqual(new Complex(-6.5d, -8), v[0]);
            v[1] = new Complex(-6.5d, -9);
            Assert.AreEqual(new Complex(-6.5d, -9), v[1]);
            v[0] = new Complex(-6.5d, -9.5d);
            Assert.AreEqual(new Complex(-6.5d, -9.5d), v[0]);
            v[0] = new Complex(-6.5d, -8.5d);
            Assert.AreEqual(new Complex(-6.5d, -8.5d), v[0]);
            v[2] = new Complex(-6.5d, -7.5d);
            Assert.AreEqual(new Complex(-6.5d, -7.5d), v[2]);
            v[0] = new Complex(-6.5d, -6.5d);
            Assert.AreEqual(new Complex(-6.5d, -6.5d), v[0]);
            v[0] = new Complex(-6.5d, -5.5d);
            Assert.AreEqual(new Complex(-6.5d, -5.5d), v[0]);
            v[1] = new Complex(-6.5d, -4.5d);
            Assert.AreEqual(new Complex(-6.5d, -4.5d), v[1]);
            v[0] = new Complex(-6.5d, -3.5d);
            Assert.AreEqual(new Complex(-6.5d, -3.5d), v[0]);
            v[1] = new Complex(-6.5d, -2.5d);
            Assert.AreEqual(new Complex(-6.5d, -2.5d), v[1]);
            v[0] = new Complex(-6.5d, -1.5d);
            Assert.AreEqual(new Complex(-6.5d, -1.5d), v[0]);
            v[1] = new Complex(-6.5d, -0.5d);
            Assert.AreEqual(new Complex(-6.5d, -0.5d), v[1]);
            v[2] = new Complex(-6.5d, 0.5d);
            Assert.AreEqual(new Complex(-6.5d, 0.5d), v[2]);
            v[2] = new Complex(-6.5d, 1.5d);
            Assert.AreEqual(new Complex(-6.5d, 1.5d), v[2]);
            v[2] = new Complex(-6.5d, 2.5d);
            Assert.AreEqual(new Complex(-6.5d, 2.5d), v[2]);
            v[0] = new Complex(-6.5d, 3.5d);
            Assert.AreEqual(new Complex(-6.5d, 3.5d), v[0]);
            v[0] = new Complex(-6.5d, 4.5d);
            Assert.AreEqual(new Complex(-6.5d, 4.5d), v[0]);
            v[0] = new Complex(-6.5d, 5.5d);
            Assert.AreEqual(new Complex(-6.5d, 5.5d), v[0]);
            v[2] = new Complex(-6.5d, 6.5d);
            Assert.AreEqual(new Complex(-6.5d, 6.5d), v[2]);
            v[1] = new Complex(-6.5d, 7.5d);
            Assert.AreEqual(new Complex(-6.5d, 7.5d), v[1]);
            v[2] = new Complex(-6.5d, 8.5d);
            Assert.AreEqual(new Complex(-6.5d, 8.5d), v[2]);
            v[0] = new Complex(-6.5d, 9.5d);
            Assert.AreEqual(new Complex(-6.5d, 9.5d), v[0]);
            v[2] = new Complex(-5.5d, 0.0);
            Assert.AreEqual(new Complex(-5.5d, 0.0), v[2]);
            v[1] = new Complex(-5.5d, 1.0);
            Assert.AreEqual(new Complex(-5.5d, 1.0), v[1]);
            v[2] = new Complex(-5.5d, 2);
            Assert.AreEqual(new Complex(-5.5d, 2), v[2]);
            v[0] = new Complex(-5.5d, 3);
            Assert.AreEqual(new Complex(-5.5d, 3), v[0]);
            v[2] = new Complex(-5.5d, 4);
            Assert.AreEqual(new Complex(-5.5d, 4), v[2]);
            v[1] = new Complex(-5.5d, 5);
            Assert.AreEqual(new Complex(-5.5d, 5), v[1]);
            v[1] = new Complex(-5.5d, 6);
            Assert.AreEqual(new Complex(-5.5d, 6), v[1]);
            v[2] = new Complex(-5.5d, 7);
            Assert.AreEqual(new Complex(-5.5d, 7), v[2]);
            v[0] = new Complex(-5.5d, 8);
            Assert.AreEqual(new Complex(-5.5d, 8), v[0]);
            v[2] = new Complex(-5.5d, 9);
            Assert.AreEqual(new Complex(-5.5d, 9), v[2]);
            v[2] = new Complex(-5.5d, -1);
            Assert.AreEqual(new Complex(-5.5d, -1), v[2]);
            v[0] = new Complex(-5.5d, -2);
            Assert.AreEqual(new Complex(-5.5d, -2), v[0]);
            v[1] = new Complex(-5.5d, -3);
            Assert.AreEqual(new Complex(-5.5d, -3), v[1]);
            v[2] = new Complex(-5.5d, -4);
            Assert.AreEqual(new Complex(-5.5d, -4), v[2]);
            v[1] = new Complex(-5.5d, -5);
            Assert.AreEqual(new Complex(-5.5d, -5), v[1]);
            v[2] = new Complex(-5.5d, -6);
            Assert.AreEqual(new Complex(-5.5d, -6), v[2]);
            v[2] = new Complex(-5.5d, -7);
            Assert.AreEqual(new Complex(-5.5d, -7), v[2]);
            v[1] = new Complex(-5.5d, -8);
            Assert.AreEqual(new Complex(-5.5d, -8), v[1]);
            v[0] = new Complex(-5.5d, -9);
            Assert.AreEqual(new Complex(-5.5d, -9), v[0]);
            v[2] = new Complex(-5.5d, -9.5d);
            Assert.AreEqual(new Complex(-5.5d, -9.5d), v[2]);
            v[0] = new Complex(-5.5d, -8.5d);
            Assert.AreEqual(new Complex(-5.5d, -8.5d), v[0]);
            v[0] = new Complex(-5.5d, -7.5d);
            Assert.AreEqual(new Complex(-5.5d, -7.5d), v[0]);
            v[2] = new Complex(-5.5d, -6.5d);
            Assert.AreEqual(new Complex(-5.5d, -6.5d), v[2]);
            v[0] = new Complex(-5.5d, -5.5d);
            Assert.AreEqual(new Complex(-5.5d, -5.5d), v[0]);
            v[2] = new Complex(-5.5d, -4.5d);
            Assert.AreEqual(new Complex(-5.5d, -4.5d), v[2]);
            v[2] = new Complex(-5.5d, -3.5d);
            Assert.AreEqual(new Complex(-5.5d, -3.5d), v[2]);
            v[2] = new Complex(-5.5d, -2.5d);
            Assert.AreEqual(new Complex(-5.5d, -2.5d), v[2]);
            v[2] = new Complex(-5.5d, -1.5d);
            Assert.AreEqual(new Complex(-5.5d, -1.5d), v[2]);
            v[2] = new Complex(-5.5d, -0.5d);
            Assert.AreEqual(new Complex(-5.5d, -0.5d), v[2]);
            v[0] = new Complex(-5.5d, 0.5d);
            Assert.AreEqual(new Complex(-5.5d, 0.5d), v[0]);
            v[0] = new Complex(-5.5d, 1.5d);
            Assert.AreEqual(new Complex(-5.5d, 1.5d), v[0]);
            v[2] = new Complex(-5.5d, 2.5d);
            Assert.AreEqual(new Complex(-5.5d, 2.5d), v[2]);
            v[1] = new Complex(-5.5d, 3.5d);
            Assert.AreEqual(new Complex(-5.5d, 3.5d), v[1]);
            v[0] = new Complex(-5.5d, 4.5d);
            Assert.AreEqual(new Complex(-5.5d, 4.5d), v[0]);
            v[2] = new Complex(-5.5d, 5.5d);
            Assert.AreEqual(new Complex(-5.5d, 5.5d), v[2]);
            v[1] = new Complex(-5.5d, 6.5d);
            Assert.AreEqual(new Complex(-5.5d, 6.5d), v[1]);
            v[0] = new Complex(-5.5d, 7.5d);
            Assert.AreEqual(new Complex(-5.5d, 7.5d), v[0]);
            v[1] = new Complex(-5.5d, 8.5d);
            Assert.AreEqual(new Complex(-5.5d, 8.5d), v[1]);
            v[0] = new Complex(-5.5d, 9.5d);
            Assert.AreEqual(new Complex(-5.5d, 9.5d), v[0]);
            v[2] = new Complex(-4.5d, 0.0);
            Assert.AreEqual(new Complex(-4.5d, 0.0), v[2]);
            v[2] = new Complex(-4.5d, 1.0);
            Assert.AreEqual(new Complex(-4.5d, 1.0), v[2]);
            v[1] = new Complex(-4.5d, 2);
            Assert.AreEqual(new Complex(-4.5d, 2), v[1]);
            v[1] = new Complex(-4.5d, 3);
            Assert.AreEqual(new Complex(-4.5d, 3), v[1]);
            v[0] = new Complex(-4.5d, 4);
            Assert.AreEqual(new Complex(-4.5d, 4), v[0]);
            v[1] = new Complex(-4.5d, 5);
            Assert.AreEqual(new Complex(-4.5d, 5), v[1]);
            v[2] = new Complex(-4.5d, 6);
            Assert.AreEqual(new Complex(-4.5d, 6), v[2]);
            v[0] = new Complex(-4.5d, 7);
            Assert.AreEqual(new Complex(-4.5d, 7), v[0]);
            v[2] = new Complex(-4.5d, 8);
            Assert.AreEqual(new Complex(-4.5d, 8), v[2]);
            v[1] = new Complex(-4.5d, 9);
            Assert.AreEqual(new Complex(-4.5d, 9), v[1]);
            v[0] = new Complex(-4.5d, -1);
            Assert.AreEqual(new Complex(-4.5d, -1), v[0]);
            v[0] = new Complex(-4.5d, -2);
            Assert.AreEqual(new Complex(-4.5d, -2), v[0]);
            v[1] = new Complex(-4.5d, -3);
            Assert.AreEqual(new Complex(-4.5d, -3), v[1]);
            v[1] = new Complex(-4.5d, -4);
            Assert.AreEqual(new Complex(-4.5d, -4), v[1]);
            v[0] = new Complex(-4.5d, -5);
            Assert.AreEqual(new Complex(-4.5d, -5), v[0]);
            v[2] = new Complex(-4.5d, -6);
            Assert.AreEqual(new Complex(-4.5d, -6), v[2]);
            v[1] = new Complex(-4.5d, -7);
            Assert.AreEqual(new Complex(-4.5d, -7), v[1]);
            v[1] = new Complex(-4.5d, -8);
            Assert.AreEqual(new Complex(-4.5d, -8), v[1]);
            v[1] = new Complex(-4.5d, -9);
            Assert.AreEqual(new Complex(-4.5d, -9), v[1]);
            v[1] = new Complex(-4.5d, -9.5d);
            Assert.AreEqual(new Complex(-4.5d, -9.5d), v[1]);
            v[0] = new Complex(-4.5d, -8.5d);
            Assert.AreEqual(new Complex(-4.5d, -8.5d), v[0]);
            v[2] = new Complex(-4.5d, -7.5d);
            Assert.AreEqual(new Complex(-4.5d, -7.5d), v[2]);
            v[1] = new Complex(-4.5d, -6.5d);
            Assert.AreEqual(new Complex(-4.5d, -6.5d), v[1]);
            v[2] = new Complex(-4.5d, -5.5d);
            Assert.AreEqual(new Complex(-4.5d, -5.5d), v[2]);
            v[2] = new Complex(-4.5d, -4.5d);
            Assert.AreEqual(new Complex(-4.5d, -4.5d), v[2]);
            v[1] = new Complex(-4.5d, -3.5d);
            Assert.AreEqual(new Complex(-4.5d, -3.5d), v[1]);
            v[0] = new Complex(-4.5d, -2.5d);
            Assert.AreEqual(new Complex(-4.5d, -2.5d), v[0]);
            v[1] = new Complex(-4.5d, -1.5d);
            Assert.AreEqual(new Complex(-4.5d, -1.5d), v[1]);
            v[1] = new Complex(-4.5d, -0.5d);
            Assert.AreEqual(new Complex(-4.5d, -0.5d), v[1]);
            v[0] = new Complex(-4.5d, 0.5d);
            Assert.AreEqual(new Complex(-4.5d, 0.5d), v[0]);
            v[0] = new Complex(-4.5d, 1.5d);
            Assert.AreEqual(new Complex(-4.5d, 1.5d), v[0]);
            v[1] = new Complex(-4.5d, 2.5d);
            Assert.AreEqual(new Complex(-4.5d, 2.5d), v[1]);
            v[0] = new Complex(-4.5d, 3.5d);
            Assert.AreEqual(new Complex(-4.5d, 3.5d), v[0]);
            v[0] = new Complex(-4.5d, 4.5d);
            Assert.AreEqual(new Complex(-4.5d, 4.5d), v[0]);
            v[0] = new Complex(-4.5d, 5.5d);
            Assert.AreEqual(new Complex(-4.5d, 5.5d), v[0]);
            v[2] = new Complex(-4.5d, 6.5d);
            Assert.AreEqual(new Complex(-4.5d, 6.5d), v[2]);
            v[1] = new Complex(-4.5d, 7.5d);
            Assert.AreEqual(new Complex(-4.5d, 7.5d), v[1]);
            v[1] = new Complex(-4.5d, 8.5d);
            Assert.AreEqual(new Complex(-4.5d, 8.5d), v[1]);
            v[2] = new Complex(-4.5d, 9.5d);
            Assert.AreEqual(new Complex(-4.5d, 9.5d), v[2]);
            v[1] = new Complex(-3.5d, 0.0);
            Assert.AreEqual(new Complex(-3.5d, 0.0), v[1]);
            v[0] = new Complex(-3.5d, 1.0);
            Assert.AreEqual(new Complex(-3.5d, 1.0), v[0]);
            v[1] = new Complex(-3.5d, 2);
            Assert.AreEqual(new Complex(-3.5d, 2), v[1]);
            v[2] = new Complex(-3.5d, 3);
            Assert.AreEqual(new Complex(-3.5d, 3), v[2]);
            v[1] = new Complex(-3.5d, 4);
            Assert.AreEqual(new Complex(-3.5d, 4), v[1]);
            v[1] = new Complex(-3.5d, 5);
            Assert.AreEqual(new Complex(-3.5d, 5), v[1]);
            v[2] = new Complex(-3.5d, 6);
            Assert.AreEqual(new Complex(-3.5d, 6), v[2]);
            v[2] = new Complex(-3.5d, 7);
            Assert.AreEqual(new Complex(-3.5d, 7), v[2]);
            v[0] = new Complex(-3.5d, 8);
            Assert.AreEqual(new Complex(-3.5d, 8), v[0]);
            v[1] = new Complex(-3.5d, 9);
            Assert.AreEqual(new Complex(-3.5d, 9), v[1]);
            v[0] = new Complex(-3.5d, -1);
            Assert.AreEqual(new Complex(-3.5d, -1), v[0]);
            v[0] = new Complex(-3.5d, -2);
            Assert.AreEqual(new Complex(-3.5d, -2), v[0]);
            v[0] = new Complex(-3.5d, -3);
            Assert.AreEqual(new Complex(-3.5d, -3), v[0]);
            v[2] = new Complex(-3.5d, -4);
            Assert.AreEqual(new Complex(-3.5d, -4), v[2]);
            v[0] = new Complex(-3.5d, -5);
            Assert.AreEqual(new Complex(-3.5d, -5), v[0]);
            v[0] = new Complex(-3.5d, -6);
            Assert.AreEqual(new Complex(-3.5d, -6), v[0]);
            v[0] = new Complex(-3.5d, -7);
            Assert.AreEqual(new Complex(-3.5d, -7), v[0]);
            v[1] = new Complex(-3.5d, -8);
            Assert.AreEqual(new Complex(-3.5d, -8), v[1]);
            v[1] = new Complex(-3.5d, -9);
            Assert.AreEqual(new Complex(-3.5d, -9), v[1]);
            v[1] = new Complex(-3.5d, -9.5d);
            Assert.AreEqual(new Complex(-3.5d, -9.5d), v[1]);
            v[1] = new Complex(-3.5d, -8.5d);
            Assert.AreEqual(new Complex(-3.5d, -8.5d), v[1]);
            v[1] = new Complex(-3.5d, -7.5d);
            Assert.AreEqual(new Complex(-3.5d, -7.5d), v[1]);
            v[0] = new Complex(-3.5d, -6.5d);
            Assert.AreEqual(new Complex(-3.5d, -6.5d), v[0]);
            v[2] = new Complex(-3.5d, -5.5d);
            Assert.AreEqual(new Complex(-3.5d, -5.5d), v[2]);
            v[2] = new Complex(-3.5d, -4.5d);
            Assert.AreEqual(new Complex(-3.5d, -4.5d), v[2]);
            v[1] = new Complex(-3.5d, -3.5d);
            Assert.AreEqual(new Complex(-3.5d, -3.5d), v[1]);
            v[2] = new Complex(-3.5d, -2.5d);
            Assert.AreEqual(new Complex(-3.5d, -2.5d), v[2]);
            v[0] = new Complex(-3.5d, -1.5d);
            Assert.AreEqual(new Complex(-3.5d, -1.5d), v[0]);
            v[0] = new Complex(-3.5d, -0.5d);
            Assert.AreEqual(new Complex(-3.5d, -0.5d), v[0]);
            v[0] = new Complex(-3.5d, 0.5d);
            Assert.AreEqual(new Complex(-3.5d, 0.5d), v[0]);
            v[0] = new Complex(-3.5d, 1.5d);
            Assert.AreEqual(new Complex(-3.5d, 1.5d), v[0]);
            v[0] = new Complex(-3.5d, 2.5d);
            Assert.AreEqual(new Complex(-3.5d, 2.5d), v[0]);
            v[2] = new Complex(-3.5d, 3.5d);
            Assert.AreEqual(new Complex(-3.5d, 3.5d), v[2]);
            v[2] = new Complex(-3.5d, 4.5d);
            Assert.AreEqual(new Complex(-3.5d, 4.5d), v[2]);
            v[0] = new Complex(-3.5d, 5.5d);
            Assert.AreEqual(new Complex(-3.5d, 5.5d), v[0]);
            v[1] = new Complex(-3.5d, 6.5d);
            Assert.AreEqual(new Complex(-3.5d, 6.5d), v[1]);
            v[2] = new Complex(-3.5d, 7.5d);
            Assert.AreEqual(new Complex(-3.5d, 7.5d), v[2]);
            v[2] = new Complex(-3.5d, 8.5d);
            Assert.AreEqual(new Complex(-3.5d, 8.5d), v[2]);
            v[0] = new Complex(-3.5d, 9.5d);
            Assert.AreEqual(new Complex(-3.5d, 9.5d), v[0]);
            v[0] = new Complex(-2.5d, 0.0);
            Assert.AreEqual(new Complex(-2.5d, 0.0), v[0]);
            v[0] = new Complex(-2.5d, 1.0);
            Assert.AreEqual(new Complex(-2.5d, 1.0), v[0]);
            v[2] = new Complex(-2.5d, 2);
            Assert.AreEqual(new Complex(-2.5d, 2), v[2]);
            v[2] = new Complex(-2.5d, 3);
            Assert.AreEqual(new Complex(-2.5d, 3), v[2]);
            v[2] = new Complex(-2.5d, 4);
            Assert.AreEqual(new Complex(-2.5d, 4), v[2]);
            v[0] = new Complex(-2.5d, 5);
            Assert.AreEqual(new Complex(-2.5d, 5), v[0]);
            v[2] = new Complex(-2.5d, 6);
            Assert.AreEqual(new Complex(-2.5d, 6), v[2]);
            v[0] = new Complex(-2.5d, 7);
            Assert.AreEqual(new Complex(-2.5d, 7), v[0]);
            v[2] = new Complex(-2.5d, 8);
            Assert.AreEqual(new Complex(-2.5d, 8), v[2]);
            v[0] = new Complex(-2.5d, 9);
            Assert.AreEqual(new Complex(-2.5d, 9), v[0]);
            v[0] = new Complex(-2.5d, -1);
            Assert.AreEqual(new Complex(-2.5d, -1), v[0]);
            v[0] = new Complex(-2.5d, -2);
            Assert.AreEqual(new Complex(-2.5d, -2), v[0]);
            v[1] = new Complex(-2.5d, -3);
            Assert.AreEqual(new Complex(-2.5d, -3), v[1]);
            v[0] = new Complex(-2.5d, -4);
            Assert.AreEqual(new Complex(-2.5d, -4), v[0]);
            v[0] = new Complex(-2.5d, -5);
            Assert.AreEqual(new Complex(-2.5d, -5), v[0]);
            v[0] = new Complex(-2.5d, -6);
            Assert.AreEqual(new Complex(-2.5d, -6), v[0]);
            v[0] = new Complex(-2.5d, -7);
            Assert.AreEqual(new Complex(-2.5d, -7), v[0]);
            v[2] = new Complex(-2.5d, -8);
            Assert.AreEqual(new Complex(-2.5d, -8), v[2]);
            v[1] = new Complex(-2.5d, -9);
            Assert.AreEqual(new Complex(-2.5d, -9), v[1]);
            v[0] = new Complex(-2.5d, -9.5d);
            Assert.AreEqual(new Complex(-2.5d, -9.5d), v[0]);
            v[2] = new Complex(-2.5d, -8.5d);
            Assert.AreEqual(new Complex(-2.5d, -8.5d), v[2]);
            v[2] = new Complex(-2.5d, -7.5d);
            Assert.AreEqual(new Complex(-2.5d, -7.5d), v[2]);
            v[2] = new Complex(-2.5d, -6.5d);
            Assert.AreEqual(new Complex(-2.5d, -6.5d), v[2]);
            v[1] = new Complex(-2.5d, -5.5d);
            Assert.AreEqual(new Complex(-2.5d, -5.5d), v[1]);
            v[0] = new Complex(-2.5d, -4.5d);
            Assert.AreEqual(new Complex(-2.5d, -4.5d), v[0]);
            v[1] = new Complex(-2.5d, -3.5d);
            Assert.AreEqual(new Complex(-2.5d, -3.5d), v[1]);
            v[2] = new Complex(-2.5d, -2.5d);
            Assert.AreEqual(new Complex(-2.5d, -2.5d), v[2]);
            v[0] = new Complex(-2.5d, -1.5d);
            Assert.AreEqual(new Complex(-2.5d, -1.5d), v[0]);
            v[0] = new Complex(-2.5d, -0.5d);
            Assert.AreEqual(new Complex(-2.5d, -0.5d), v[0]);
            v[2] = new Complex(-2.5d, 0.5d);
            Assert.AreEqual(new Complex(-2.5d, 0.5d), v[2]);
            v[1] = new Complex(-2.5d, 1.5d);
            Assert.AreEqual(new Complex(-2.5d, 1.5d), v[1]);
            v[0] = new Complex(-2.5d, 2.5d);
            Assert.AreEqual(new Complex(-2.5d, 2.5d), v[0]);
            v[0] = new Complex(-2.5d, 3.5d);
            Assert.AreEqual(new Complex(-2.5d, 3.5d), v[0]);
            v[0] = new Complex(-2.5d, 4.5d);
            Assert.AreEqual(new Complex(-2.5d, 4.5d), v[0]);
            v[1] = new Complex(-2.5d, 5.5d);
            Assert.AreEqual(new Complex(-2.5d, 5.5d), v[1]);
            v[1] = new Complex(-2.5d, 6.5d);
            Assert.AreEqual(new Complex(-2.5d, 6.5d), v[1]);
            v[2] = new Complex(-2.5d, 7.5d);
            Assert.AreEqual(new Complex(-2.5d, 7.5d), v[2]);
            v[1] = new Complex(-2.5d, 8.5d);
            Assert.AreEqual(new Complex(-2.5d, 8.5d), v[1]);
            v[0] = new Complex(-2.5d, 9.5d);
            Assert.AreEqual(new Complex(-2.5d, 9.5d), v[0]);
            v[2] = new Complex(-1.5d, 0.0);
            Assert.AreEqual(new Complex(-1.5d, 0.0), v[2]);
            v[2] = new Complex(-1.5d, 1.0);
            Assert.AreEqual(new Complex(-1.5d, 1.0), v[2]);
            v[1] = new Complex(-1.5d, 2);
            Assert.AreEqual(new Complex(-1.5d, 2), v[1]);
            v[2] = new Complex(-1.5d, 3);
            Assert.AreEqual(new Complex(-1.5d, 3), v[2]);
            v[2] = new Complex(-1.5d, 4);
            Assert.AreEqual(new Complex(-1.5d, 4), v[2]);
            v[0] = new Complex(-1.5d, 5);
            Assert.AreEqual(new Complex(-1.5d, 5), v[0]);
            v[0] = new Complex(-1.5d, 6);
            Assert.AreEqual(new Complex(-1.5d, 6), v[0]);
            v[1] = new Complex(-1.5d, 7);
            Assert.AreEqual(new Complex(-1.5d, 7), v[1]);
            v[0] = new Complex(-1.5d, 8);
            Assert.AreEqual(new Complex(-1.5d, 8), v[0]);
            v[2] = new Complex(-1.5d, 9);
            Assert.AreEqual(new Complex(-1.5d, 9), v[2]);
            v[1] = new Complex(-1.5d, -1);
            Assert.AreEqual(new Complex(-1.5d, -1), v[1]);
            v[2] = new Complex(-1.5d, -2);
            Assert.AreEqual(new Complex(-1.5d, -2), v[2]);
            v[1] = new Complex(-1.5d, -3);
            Assert.AreEqual(new Complex(-1.5d, -3), v[1]);
            v[1] = new Complex(-1.5d, -4);
            Assert.AreEqual(new Complex(-1.5d, -4), v[1]);
            v[2] = new Complex(-1.5d, -5);
            Assert.AreEqual(new Complex(-1.5d, -5), v[2]);
            v[0] = new Complex(-1.5d, -6);
            Assert.AreEqual(new Complex(-1.5d, -6), v[0]);
            v[0] = new Complex(-1.5d, -7);
            Assert.AreEqual(new Complex(-1.5d, -7), v[0]);
            v[1] = new Complex(-1.5d, -8);
            Assert.AreEqual(new Complex(-1.5d, -8), v[1]);
            v[0] = new Complex(-1.5d, -9);
            Assert.AreEqual(new Complex(-1.5d, -9), v[0]);
            v[2] = new Complex(-1.5d, -9.5d);
            Assert.AreEqual(new Complex(-1.5d, -9.5d), v[2]);
            v[1] = new Complex(-1.5d, -8.5d);
            Assert.AreEqual(new Complex(-1.5d, -8.5d), v[1]);
            v[0] = new Complex(-1.5d, -7.5d);
            Assert.AreEqual(new Complex(-1.5d, -7.5d), v[0]);
            v[2] = new Complex(-1.5d, -6.5d);
            Assert.AreEqual(new Complex(-1.5d, -6.5d), v[2]);
            v[2] = new Complex(-1.5d, -5.5d);
            Assert.AreEqual(new Complex(-1.5d, -5.5d), v[2]);
            v[0] = new Complex(-1.5d, -4.5d);
            Assert.AreEqual(new Complex(-1.5d, -4.5d), v[0]);
            v[1] = new Complex(-1.5d, -3.5d);
            Assert.AreEqual(new Complex(-1.5d, -3.5d), v[1]);
            v[0] = new Complex(-1.5d, -2.5d);
            Assert.AreEqual(new Complex(-1.5d, -2.5d), v[0]);
            v[2] = new Complex(-1.5d, -1.5d);
            Assert.AreEqual(new Complex(-1.5d, -1.5d), v[2]);
            v[1] = new Complex(-1.5d, -0.5d);
            Assert.AreEqual(new Complex(-1.5d, -0.5d), v[1]);
            v[2] = new Complex(-1.5d, 0.5d);
            Assert.AreEqual(new Complex(-1.5d, 0.5d), v[2]);
            v[1] = new Complex(-1.5d, 1.5d);
            Assert.AreEqual(new Complex(-1.5d, 1.5d), v[1]);
            v[0] = new Complex(-1.5d, 2.5d);
            Assert.AreEqual(new Complex(-1.5d, 2.5d), v[0]);
            v[1] = new Complex(-1.5d, 3.5d);
            Assert.AreEqual(new Complex(-1.5d, 3.5d), v[1]);
            v[2] = new Complex(-1.5d, 4.5d);
            Assert.AreEqual(new Complex(-1.5d, 4.5d), v[2]);
            v[1] = new Complex(-1.5d, 5.5d);
            Assert.AreEqual(new Complex(-1.5d, 5.5d), v[1]);
            v[0] = new Complex(-1.5d, 6.5d);
            Assert.AreEqual(new Complex(-1.5d, 6.5d), v[0]);
            v[1] = new Complex(-1.5d, 7.5d);
            Assert.AreEqual(new Complex(-1.5d, 7.5d), v[1]);
            v[0] = new Complex(-1.5d, 8.5d);
            Assert.AreEqual(new Complex(-1.5d, 8.5d), v[0]);
            v[2] = new Complex(-1.5d, 9.5d);
            Assert.AreEqual(new Complex(-1.5d, 9.5d), v[2]);
            v[1] = new Complex(-0.5d, 0.0);
            Assert.AreEqual(new Complex(-0.5d, 0.0), v[1]);
            v[2] = new Complex(-0.5d, 1.0);
            Assert.AreEqual(new Complex(-0.5d, 1.0), v[2]);
            v[0] = new Complex(-0.5d, 2);
            Assert.AreEqual(new Complex(-0.5d, 2), v[0]);
            v[2] = new Complex(-0.5d, 3);
            Assert.AreEqual(new Complex(-0.5d, 3), v[2]);
            v[0] = new Complex(-0.5d, 4);
            Assert.AreEqual(new Complex(-0.5d, 4), v[0]);
            v[1] = new Complex(-0.5d, 5);
            Assert.AreEqual(new Complex(-0.5d, 5), v[1]);
            v[2] = new Complex(-0.5d, 6);
            Assert.AreEqual(new Complex(-0.5d, 6), v[2]);
            v[0] = new Complex(-0.5d, 7);
            Assert.AreEqual(new Complex(-0.5d, 7), v[0]);
            v[1] = new Complex(-0.5d, 8);
            Assert.AreEqual(new Complex(-0.5d, 8), v[1]);
            v[1] = new Complex(-0.5d, 9);
            Assert.AreEqual(new Complex(-0.5d, 9), v[1]);
            v[0] = new Complex(-0.5d, -1);
            Assert.AreEqual(new Complex(-0.5d, -1), v[0]);
            v[0] = new Complex(-0.5d, -2);
            Assert.AreEqual(new Complex(-0.5d, -2), v[0]);
            v[2] = new Complex(-0.5d, -3);
            Assert.AreEqual(new Complex(-0.5d, -3), v[2]);
            v[2] = new Complex(-0.5d, -4);
            Assert.AreEqual(new Complex(-0.5d, -4), v[2]);
            v[2] = new Complex(-0.5d, -5);
            Assert.AreEqual(new Complex(-0.5d, -5), v[2]);
            v[2] = new Complex(-0.5d, -6);
            Assert.AreEqual(new Complex(-0.5d, -6), v[2]);
            v[2] = new Complex(-0.5d, -7);
            Assert.AreEqual(new Complex(-0.5d, -7), v[2]);
            v[0] = new Complex(-0.5d, -8);
            Assert.AreEqual(new Complex(-0.5d, -8), v[0]);
            v[1] = new Complex(-0.5d, -9);
            Assert.AreEqual(new Complex(-0.5d, -9), v[1]);
            v[2] = new Complex(-0.5d, -9.5d);
            Assert.AreEqual(new Complex(-0.5d, -9.5d), v[2]);
            v[0] = new Complex(-0.5d, -8.5d);
            Assert.AreEqual(new Complex(-0.5d, -8.5d), v[0]);
            v[0] = new Complex(-0.5d, -7.5d);
            Assert.AreEqual(new Complex(-0.5d, -7.5d), v[0]);
            v[1] = new Complex(-0.5d, -6.5d);
            Assert.AreEqual(new Complex(-0.5d, -6.5d), v[1]);
            v[0] = new Complex(-0.5d, -5.5d);
            Assert.AreEqual(new Complex(-0.5d, -5.5d), v[0]);
            v[1] = new Complex(-0.5d, -4.5d);
            Assert.AreEqual(new Complex(-0.5d, -4.5d), v[1]);
            v[1] = new Complex(-0.5d, -3.5d);
            Assert.AreEqual(new Complex(-0.5d, -3.5d), v[1]);
            v[1] = new Complex(-0.5d, -2.5d);
            Assert.AreEqual(new Complex(-0.5d, -2.5d), v[1]);
            v[1] = new Complex(-0.5d, -1.5d);
            Assert.AreEqual(new Complex(-0.5d, -1.5d), v[1]);
            v[2] = new Complex(-0.5d, -0.5d);
            Assert.AreEqual(new Complex(-0.5d, -0.5d), v[2]);
            v[2] = new Complex(-0.5d, 0.5d);
            Assert.AreEqual(new Complex(-0.5d, 0.5d), v[2]);
            v[1] = new Complex(-0.5d, 1.5d);
            Assert.AreEqual(new Complex(-0.5d, 1.5d), v[1]);
            v[1] = new Complex(-0.5d, 2.5d);
            Assert.AreEqual(new Complex(-0.5d, 2.5d), v[1]);
            v[0] = new Complex(-0.5d, 3.5d);
            Assert.AreEqual(new Complex(-0.5d, 3.5d), v[0]);
            v[1] = new Complex(-0.5d, 4.5d);
            Assert.AreEqual(new Complex(-0.5d, 4.5d), v[1]);
            v[2] = new Complex(-0.5d, 5.5d);
            Assert.AreEqual(new Complex(-0.5d, 5.5d), v[2]);
            v[2] = new Complex(-0.5d, 6.5d);
            Assert.AreEqual(new Complex(-0.5d, 6.5d), v[2]);
            v[1] = new Complex(-0.5d, 7.5d);
            Assert.AreEqual(new Complex(-0.5d, 7.5d), v[1]);
            v[1] = new Complex(-0.5d, 8.5d);
            Assert.AreEqual(new Complex(-0.5d, 8.5d), v[1]);
            v[1] = new Complex(-0.5d, 9.5d);
            Assert.AreEqual(new Complex(-0.5d, 9.5d), v[1]);
            v[0] = new Complex(0.5d, 0.0);
            Assert.AreEqual(new Complex(0.5d, 0.0), v[0]);
            v[0] = new Complex(0.5d, 1.0);
            Assert.AreEqual(new Complex(0.5d, 1.0), v[0]);
            v[1] = new Complex(0.5d, 2);
            Assert.AreEqual(new Complex(0.5d, 2), v[1]);
            v[1] = new Complex(0.5d, 3);
            Assert.AreEqual(new Complex(0.5d, 3), v[1]);
            v[0] = new Complex(0.5d, 4);
            Assert.AreEqual(new Complex(0.5d, 4), v[0]);
            v[0] = new Complex(0.5d, 5);
            Assert.AreEqual(new Complex(0.5d, 5), v[0]);
            v[1] = new Complex(0.5d, 6);
            Assert.AreEqual(new Complex(0.5d, 6), v[1]);
            v[1] = new Complex(0.5d, 7);
            Assert.AreEqual(new Complex(0.5d, 7), v[1]);
            v[1] = new Complex(0.5d, 8);
            Assert.AreEqual(new Complex(0.5d, 8), v[1]);
            v[2] = new Complex(0.5d, 9);
            Assert.AreEqual(new Complex(0.5d, 9), v[2]);
            v[2] = new Complex(0.5d, -1);
            Assert.AreEqual(new Complex(0.5d, -1), v[2]);
            v[2] = new Complex(0.5d, -2);
            Assert.AreEqual(new Complex(0.5d, -2), v[2]);
            v[0] = new Complex(0.5d, -3);
            Assert.AreEqual(new Complex(0.5d, -3), v[0]);
            v[2] = new Complex(0.5d, -4);
            Assert.AreEqual(new Complex(0.5d, -4), v[2]);
            v[0] = new Complex(0.5d, -5);
            Assert.AreEqual(new Complex(0.5d, -5), v[0]);
            v[2] = new Complex(0.5d, -6);
            Assert.AreEqual(new Complex(0.5d, -6), v[2]);
            v[1] = new Complex(0.5d, -7);
            Assert.AreEqual(new Complex(0.5d, -7), v[1]);
            v[1] = new Complex(0.5d, -8);
            Assert.AreEqual(new Complex(0.5d, -8), v[1]);
            v[0] = new Complex(0.5d, -9);
            Assert.AreEqual(new Complex(0.5d, -9), v[0]);
            v[0] = new Complex(0.5d, -9.5d);
            Assert.AreEqual(new Complex(0.5d, -9.5d), v[0]);
            v[2] = new Complex(0.5d, -8.5d);
            Assert.AreEqual(new Complex(0.5d, -8.5d), v[2]);
            v[0] = new Complex(0.5d, -7.5d);
            Assert.AreEqual(new Complex(0.5d, -7.5d), v[0]);
            v[1] = new Complex(0.5d, -6.5d);
            Assert.AreEqual(new Complex(0.5d, -6.5d), v[1]);
            v[0] = new Complex(0.5d, -5.5d);
            Assert.AreEqual(new Complex(0.5d, -5.5d), v[0]);
            v[2] = new Complex(0.5d, -4.5d);
            Assert.AreEqual(new Complex(0.5d, -4.5d), v[2]);
            v[0] = new Complex(0.5d, -3.5d);
            Assert.AreEqual(new Complex(0.5d, -3.5d), v[0]);
            v[1] = new Complex(0.5d, -2.5d);
            Assert.AreEqual(new Complex(0.5d, -2.5d), v[1]);
            v[2] = new Complex(0.5d, -1.5d);
            Assert.AreEqual(new Complex(0.5d, -1.5d), v[2]);
            v[1] = new Complex(0.5d, -0.5d);
            Assert.AreEqual(new Complex(0.5d, -0.5d), v[1]);
            v[2] = new Complex(0.5d, 0.5d);
            Assert.AreEqual(new Complex(0.5d, 0.5d), v[2]);
            v[2] = new Complex(0.5d, 1.5d);
            Assert.AreEqual(new Complex(0.5d, 1.5d), v[2]);
            v[1] = new Complex(0.5d, 2.5d);
            Assert.AreEqual(new Complex(0.5d, 2.5d), v[1]);
            v[0] = new Complex(0.5d, 3.5d);
            Assert.AreEqual(new Complex(0.5d, 3.5d), v[0]);
            v[2] = new Complex(0.5d, 4.5d);
            Assert.AreEqual(new Complex(0.5d, 4.5d), v[2]);
            v[1] = new Complex(0.5d, 5.5d);
            Assert.AreEqual(new Complex(0.5d, 5.5d), v[1]);
            v[1] = new Complex(0.5d, 6.5d);
            Assert.AreEqual(new Complex(0.5d, 6.5d), v[1]);
            v[2] = new Complex(0.5d, 7.5d);
            Assert.AreEqual(new Complex(0.5d, 7.5d), v[2]);
            v[1] = new Complex(0.5d, 8.5d);
            Assert.AreEqual(new Complex(0.5d, 8.5d), v[1]);
            v[0] = new Complex(0.5d, 9.5d);
            Assert.AreEqual(new Complex(0.5d, 9.5d), v[0]);
            v[2] = new Complex(1.5d, 0.0);
            Assert.AreEqual(new Complex(1.5d, 0.0), v[2]);
            v[2] = new Complex(1.5d, 1.0);
            Assert.AreEqual(new Complex(1.5d, 1.0), v[2]);
            v[2] = new Complex(1.5d, 2);
            Assert.AreEqual(new Complex(1.5d, 2), v[2]);
            v[2] = new Complex(1.5d, 3);
            Assert.AreEqual(new Complex(1.5d, 3), v[2]);
            v[1] = new Complex(1.5d, 4);
            Assert.AreEqual(new Complex(1.5d, 4), v[1]);
            v[2] = new Complex(1.5d, 5);
            Assert.AreEqual(new Complex(1.5d, 5), v[2]);
            v[0] = new Complex(1.5d, 6);
            Assert.AreEqual(new Complex(1.5d, 6), v[0]);
            v[0] = new Complex(1.5d, 7);
            Assert.AreEqual(new Complex(1.5d, 7), v[0]);
            v[2] = new Complex(1.5d, 8);
            Assert.AreEqual(new Complex(1.5d, 8), v[2]);
            v[0] = new Complex(1.5d, 9);
            Assert.AreEqual(new Complex(1.5d, 9), v[0]);
            v[2] = new Complex(1.5d, -1);
            Assert.AreEqual(new Complex(1.5d, -1), v[2]);
            v[1] = new Complex(1.5d, -2);
            Assert.AreEqual(new Complex(1.5d, -2), v[1]);
            v[0] = new Complex(1.5d, -3);
            Assert.AreEqual(new Complex(1.5d, -3), v[0]);
            v[1] = new Complex(1.5d, -4);
            Assert.AreEqual(new Complex(1.5d, -4), v[1]);
            v[0] = new Complex(1.5d, -5);
            Assert.AreEqual(new Complex(1.5d, -5), v[0]);
            v[1] = new Complex(1.5d, -6);
            Assert.AreEqual(new Complex(1.5d, -6), v[1]);
            v[0] = new Complex(1.5d, -7);
            Assert.AreEqual(new Complex(1.5d, -7), v[0]);
            v[2] = new Complex(1.5d, -8);
            Assert.AreEqual(new Complex(1.5d, -8), v[2]);
            v[0] = new Complex(1.5d, -9);
            Assert.AreEqual(new Complex(1.5d, -9), v[0]);
            v[2] = new Complex(1.5d, -9.5d);
            Assert.AreEqual(new Complex(1.5d, -9.5d), v[2]);
            v[0] = new Complex(1.5d, -8.5d);
            Assert.AreEqual(new Complex(1.5d, -8.5d), v[0]);
            v[2] = new Complex(1.5d, -7.5d);
            Assert.AreEqual(new Complex(1.5d, -7.5d), v[2]);
            v[2] = new Complex(1.5d, -6.5d);
            Assert.AreEqual(new Complex(1.5d, -6.5d), v[2]);
            v[0] = new Complex(1.5d, -5.5d);
            Assert.AreEqual(new Complex(1.5d, -5.5d), v[0]);
            v[1] = new Complex(1.5d, -4.5d);
            Assert.AreEqual(new Complex(1.5d, -4.5d), v[1]);
            v[2] = new Complex(1.5d, -3.5d);
            Assert.AreEqual(new Complex(1.5d, -3.5d), v[2]);
            v[1] = new Complex(1.5d, -2.5d);
            Assert.AreEqual(new Complex(1.5d, -2.5d), v[1]);
            v[1] = new Complex(1.5d, -1.5d);
            Assert.AreEqual(new Complex(1.5d, -1.5d), v[1]);
            v[1] = new Complex(1.5d, -0.5d);
            Assert.AreEqual(new Complex(1.5d, -0.5d), v[1]);
            v[1] = new Complex(1.5d, 0.5d);
            Assert.AreEqual(new Complex(1.5d, 0.5d), v[1]);
            v[2] = new Complex(1.5d, 1.5d);
            Assert.AreEqual(new Complex(1.5d, 1.5d), v[2]);
            v[0] = new Complex(1.5d, 2.5d);
            Assert.AreEqual(new Complex(1.5d, 2.5d), v[0]);
            v[2] = new Complex(1.5d, 3.5d);
            Assert.AreEqual(new Complex(1.5d, 3.5d), v[2]);
            v[1] = new Complex(1.5d, 4.5d);
            Assert.AreEqual(new Complex(1.5d, 4.5d), v[1]);
            v[0] = new Complex(1.5d, 5.5d);
            Assert.AreEqual(new Complex(1.5d, 5.5d), v[0]);
            v[0] = new Complex(1.5d, 6.5d);
            Assert.AreEqual(new Complex(1.5d, 6.5d), v[0]);
            v[0] = new Complex(1.5d, 7.5d);
            Assert.AreEqual(new Complex(1.5d, 7.5d), v[0]);
            v[0] = new Complex(1.5d, 8.5d);
            Assert.AreEqual(new Complex(1.5d, 8.5d), v[0]);
            v[2] = new Complex(1.5d, 9.5d);
            Assert.AreEqual(new Complex(1.5d, 9.5d), v[2]);
            v[1] = new Complex(2.5d, 0.0);
            Assert.AreEqual(new Complex(2.5d, 0.0), v[1]);
            v[2] = new Complex(2.5d, 1.0);
            Assert.AreEqual(new Complex(2.5d, 1.0), v[2]);
            v[2] = new Complex(2.5d, 2);
            Assert.AreEqual(new Complex(2.5d, 2), v[2]);
            v[2] = new Complex(2.5d, 3);
            Assert.AreEqual(new Complex(2.5d, 3), v[2]);
            v[2] = new Complex(2.5d, 4);
            Assert.AreEqual(new Complex(2.5d, 4), v[2]);
            v[1] = new Complex(2.5d, 5);
            Assert.AreEqual(new Complex(2.5d, 5), v[1]);
            v[1] = new Complex(2.5d, 6);
            Assert.AreEqual(new Complex(2.5d, 6), v[1]);
            v[1] = new Complex(2.5d, 7);
            Assert.AreEqual(new Complex(2.5d, 7), v[1]);
            v[0] = new Complex(2.5d, 8);
            Assert.AreEqual(new Complex(2.5d, 8), v[0]);
            v[0] = new Complex(2.5d, 9);
            Assert.AreEqual(new Complex(2.5d, 9), v[0]);
            v[1] = new Complex(2.5d, -1);
            Assert.AreEqual(new Complex(2.5d, -1), v[1]);
            v[1] = new Complex(2.5d, -2);
            Assert.AreEqual(new Complex(2.5d, -2), v[1]);
            v[1] = new Complex(2.5d, -3);
            Assert.AreEqual(new Complex(2.5d, -3), v[1]);
            v[1] = new Complex(2.5d, -4);
            Assert.AreEqual(new Complex(2.5d, -4), v[1]);
            v[2] = new Complex(2.5d, -5);
            Assert.AreEqual(new Complex(2.5d, -5), v[2]);
            v[0] = new Complex(2.5d, -6);
            Assert.AreEqual(new Complex(2.5d, -6), v[0]);
            v[0] = new Complex(2.5d, -7);
            Assert.AreEqual(new Complex(2.5d, -7), v[0]);
            v[0] = new Complex(2.5d, -8);
            Assert.AreEqual(new Complex(2.5d, -8), v[0]);
            v[1] = new Complex(2.5d, -9);
            Assert.AreEqual(new Complex(2.5d, -9), v[1]);
            v[0] = new Complex(2.5d, -9.5d);
            Assert.AreEqual(new Complex(2.5d, -9.5d), v[0]);
            v[2] = new Complex(2.5d, -8.5d);
            Assert.AreEqual(new Complex(2.5d, -8.5d), v[2]);
            v[1] = new Complex(2.5d, -7.5d);
            Assert.AreEqual(new Complex(2.5d, -7.5d), v[1]);
            v[1] = new Complex(2.5d, -6.5d);
            Assert.AreEqual(new Complex(2.5d, -6.5d), v[1]);
            v[2] = new Complex(2.5d, -5.5d);
            Assert.AreEqual(new Complex(2.5d, -5.5d), v[2]);
            v[0] = new Complex(2.5d, -4.5d);
            Assert.AreEqual(new Complex(2.5d, -4.5d), v[0]);
            v[1] = new Complex(2.5d, -3.5d);
            Assert.AreEqual(new Complex(2.5d, -3.5d), v[1]);
            v[2] = new Complex(2.5d, -2.5d);
            Assert.AreEqual(new Complex(2.5d, -2.5d), v[2]);
            v[2] = new Complex(2.5d, -1.5d);
            Assert.AreEqual(new Complex(2.5d, -1.5d), v[2]);
            v[2] = new Complex(2.5d, -0.5d);
            Assert.AreEqual(new Complex(2.5d, -0.5d), v[2]);
            v[0] = new Complex(2.5d, 0.5d);
            Assert.AreEqual(new Complex(2.5d, 0.5d), v[0]);
            v[2] = new Complex(2.5d, 1.5d);
            Assert.AreEqual(new Complex(2.5d, 1.5d), v[2]);
            v[0] = new Complex(2.5d, 2.5d);
            Assert.AreEqual(new Complex(2.5d, 2.5d), v[0]);
            v[2] = new Complex(2.5d, 3.5d);
            Assert.AreEqual(new Complex(2.5d, 3.5d), v[2]);
            v[0] = new Complex(2.5d, 4.5d);
            Assert.AreEqual(new Complex(2.5d, 4.5d), v[0]);
            v[2] = new Complex(2.5d, 5.5d);
            Assert.AreEqual(new Complex(2.5d, 5.5d), v[2]);
            v[0] = new Complex(2.5d, 6.5d);
            Assert.AreEqual(new Complex(2.5d, 6.5d), v[0]);
            v[0] = new Complex(2.5d, 7.5d);
            Assert.AreEqual(new Complex(2.5d, 7.5d), v[0]);
            v[2] = new Complex(2.5d, 8.5d);
            Assert.AreEqual(new Complex(2.5d, 8.5d), v[2]);
            v[2] = new Complex(2.5d, 9.5d);
            Assert.AreEqual(new Complex(2.5d, 9.5d), v[2]);
            v[2] = new Complex(3.5d, 0.0);
            Assert.AreEqual(new Complex(3.5d, 0.0), v[2]);
            v[0] = new Complex(3.5d, 1.0);
            Assert.AreEqual(new Complex(3.5d, 1.0), v[0]);
            v[0] = new Complex(3.5d, 2);
            Assert.AreEqual(new Complex(3.5d, 2), v[0]);
            v[1] = new Complex(3.5d, 3);
            Assert.AreEqual(new Complex(3.5d, 3), v[1]);
            v[1] = new Complex(3.5d, 4);
            Assert.AreEqual(new Complex(3.5d, 4), v[1]);
            v[2] = new Complex(3.5d, 5);
            Assert.AreEqual(new Complex(3.5d, 5), v[2]);
            v[2] = new Complex(3.5d, 6);
            Assert.AreEqual(new Complex(3.5d, 6), v[2]);
            v[0] = new Complex(3.5d, 7);
            Assert.AreEqual(new Complex(3.5d, 7), v[0]);
            v[1] = new Complex(3.5d, 8);
            Assert.AreEqual(new Complex(3.5d, 8), v[1]);
            v[2] = new Complex(3.5d, 9);
            Assert.AreEqual(new Complex(3.5d, 9), v[2]);
            v[0] = new Complex(3.5d, -1);
            Assert.AreEqual(new Complex(3.5d, -1), v[0]);
            v[0] = new Complex(3.5d, -2);
            Assert.AreEqual(new Complex(3.5d, -2), v[0]);
            v[0] = new Complex(3.5d, -3);
            Assert.AreEqual(new Complex(3.5d, -3), v[0]);
            v[2] = new Complex(3.5d, -4);
            Assert.AreEqual(new Complex(3.5d, -4), v[2]);
            v[2] = new Complex(3.5d, -5);
            Assert.AreEqual(new Complex(3.5d, -5), v[2]);
            v[0] = new Complex(3.5d, -6);
            Assert.AreEqual(new Complex(3.5d, -6), v[0]);
            v[0] = new Complex(3.5d, -7);
            Assert.AreEqual(new Complex(3.5d, -7), v[0]);
            v[0] = new Complex(3.5d, -8);
            Assert.AreEqual(new Complex(3.5d, -8), v[0]);
            v[2] = new Complex(3.5d, -9);
            Assert.AreEqual(new Complex(3.5d, -9), v[2]);
            v[1] = new Complex(3.5d, -9.5d);
            Assert.AreEqual(new Complex(3.5d, -9.5d), v[1]);
            v[1] = new Complex(3.5d, -8.5d);
            Assert.AreEqual(new Complex(3.5d, -8.5d), v[1]);
            v[2] = new Complex(3.5d, -7.5d);
            Assert.AreEqual(new Complex(3.5d, -7.5d), v[2]);
            v[2] = new Complex(3.5d, -6.5d);
            Assert.AreEqual(new Complex(3.5d, -6.5d), v[2]);
            v[2] = new Complex(3.5d, -5.5d);
            Assert.AreEqual(new Complex(3.5d, -5.5d), v[2]);
            v[2] = new Complex(3.5d, -4.5d);
            Assert.AreEqual(new Complex(3.5d, -4.5d), v[2]);
            v[0] = new Complex(3.5d, -3.5d);
            Assert.AreEqual(new Complex(3.5d, -3.5d), v[0]);
            v[0] = new Complex(3.5d, -2.5d);
            Assert.AreEqual(new Complex(3.5d, -2.5d), v[0]);
            v[2] = new Complex(3.5d, -1.5d);
            Assert.AreEqual(new Complex(3.5d, -1.5d), v[2]);
            v[1] = new Complex(3.5d, -0.5d);
            Assert.AreEqual(new Complex(3.5d, -0.5d), v[1]);
            v[1] = new Complex(3.5d, 0.5d);
            Assert.AreEqual(new Complex(3.5d, 0.5d), v[1]);
            v[2] = new Complex(3.5d, 1.5d);
            Assert.AreEqual(new Complex(3.5d, 1.5d), v[2]);
            v[2] = new Complex(3.5d, 2.5d);
            Assert.AreEqual(new Complex(3.5d, 2.5d), v[2]);
            v[0] = new Complex(3.5d, 3.5d);
            Assert.AreEqual(new Complex(3.5d, 3.5d), v[0]);
            v[0] = new Complex(3.5d, 4.5d);
            Assert.AreEqual(new Complex(3.5d, 4.5d), v[0]);
            v[2] = new Complex(3.5d, 5.5d);
            Assert.AreEqual(new Complex(3.5d, 5.5d), v[2]);
            v[0] = new Complex(3.5d, 6.5d);
            Assert.AreEqual(new Complex(3.5d, 6.5d), v[0]);
            v[1] = new Complex(3.5d, 7.5d);
            Assert.AreEqual(new Complex(3.5d, 7.5d), v[1]);
            v[2] = new Complex(3.5d, 8.5d);
            Assert.AreEqual(new Complex(3.5d, 8.5d), v[2]);
            v[2] = new Complex(3.5d, 9.5d);
            Assert.AreEqual(new Complex(3.5d, 9.5d), v[2]);
            v[0] = new Complex(4.5d, 0.0);
            Assert.AreEqual(new Complex(4.5d, 0.0), v[0]);
            v[0] = new Complex(4.5d, 1.0);
            Assert.AreEqual(new Complex(4.5d, 1.0), v[0]);
            v[0] = new Complex(4.5d, 2);
            Assert.AreEqual(new Complex(4.5d, 2), v[0]);
            v[0] = new Complex(4.5d, 3);
            Assert.AreEqual(new Complex(4.5d, 3), v[0]);
            v[2] = new Complex(4.5d, 4);
            Assert.AreEqual(new Complex(4.5d, 4), v[2]);
            v[1] = new Complex(4.5d, 5);
            Assert.AreEqual(new Complex(4.5d, 5), v[1]);
            v[0] = new Complex(4.5d, 6);
            Assert.AreEqual(new Complex(4.5d, 6), v[0]);
            v[2] = new Complex(4.5d, 7);
            Assert.AreEqual(new Complex(4.5d, 7), v[2]);
            v[0] = new Complex(4.5d, 8);
            Assert.AreEqual(new Complex(4.5d, 8), v[0]);
            v[2] = new Complex(4.5d, 9);
            Assert.AreEqual(new Complex(4.5d, 9), v[2]);
            v[0] = new Complex(4.5d, -1);
            Assert.AreEqual(new Complex(4.5d, -1), v[0]);
            v[2] = new Complex(4.5d, -2);
            Assert.AreEqual(new Complex(4.5d, -2), v[2]);
            v[2] = new Complex(4.5d, -3);
            Assert.AreEqual(new Complex(4.5d, -3), v[2]);
            v[1] = new Complex(4.5d, -4);
            Assert.AreEqual(new Complex(4.5d, -4), v[1]);
            v[1] = new Complex(4.5d, -5);
            Assert.AreEqual(new Complex(4.5d, -5), v[1]);
            v[1] = new Complex(4.5d, -6);
            Assert.AreEqual(new Complex(4.5d, -6), v[1]);
            v[2] = new Complex(4.5d, -7);
            Assert.AreEqual(new Complex(4.5d, -7), v[2]);
            v[1] = new Complex(4.5d, -8);
            Assert.AreEqual(new Complex(4.5d, -8), v[1]);
            v[1] = new Complex(4.5d, -9);
            Assert.AreEqual(new Complex(4.5d, -9), v[1]);
            v[1] = new Complex(4.5d, -9.5d);
            Assert.AreEqual(new Complex(4.5d, -9.5d), v[1]);
            v[0] = new Complex(4.5d, -8.5d);
            Assert.AreEqual(new Complex(4.5d, -8.5d), v[0]);
            v[2] = new Complex(4.5d, -7.5d);
            Assert.AreEqual(new Complex(4.5d, -7.5d), v[2]);
            v[0] = new Complex(4.5d, -6.5d);
            Assert.AreEqual(new Complex(4.5d, -6.5d), v[0]);
            v[2] = new Complex(4.5d, -5.5d);
            Assert.AreEqual(new Complex(4.5d, -5.5d), v[2]);
            v[0] = new Complex(4.5d, -4.5d);
            Assert.AreEqual(new Complex(4.5d, -4.5d), v[0]);
            v[2] = new Complex(4.5d, -3.5d);
            Assert.AreEqual(new Complex(4.5d, -3.5d), v[2]);
            v[0] = new Complex(4.5d, -2.5d);
            Assert.AreEqual(new Complex(4.5d, -2.5d), v[0]);
            v[0] = new Complex(4.5d, -1.5d);
            Assert.AreEqual(new Complex(4.5d, -1.5d), v[0]);
            v[2] = new Complex(4.5d, -0.5d);
            Assert.AreEqual(new Complex(4.5d, -0.5d), v[2]);
            v[0] = new Complex(4.5d, 0.5d);
            Assert.AreEqual(new Complex(4.5d, 0.5d), v[0]);
            v[2] = new Complex(4.5d, 1.5d);
            Assert.AreEqual(new Complex(4.5d, 1.5d), v[2]);
            v[1] = new Complex(4.5d, 2.5d);
            Assert.AreEqual(new Complex(4.5d, 2.5d), v[1]);
            v[0] = new Complex(4.5d, 3.5d);
            Assert.AreEqual(new Complex(4.5d, 3.5d), v[0]);
            v[0] = new Complex(4.5d, 4.5d);
            Assert.AreEqual(new Complex(4.5d, 4.5d), v[0]);
            v[2] = new Complex(4.5d, 5.5d);
            Assert.AreEqual(new Complex(4.5d, 5.5d), v[2]);
            v[0] = new Complex(4.5d, 6.5d);
            Assert.AreEqual(new Complex(4.5d, 6.5d), v[0]);
            v[0] = new Complex(4.5d, 7.5d);
            Assert.AreEqual(new Complex(4.5d, 7.5d), v[0]);
            v[2] = new Complex(4.5d, 8.5d);
            Assert.AreEqual(new Complex(4.5d, 8.5d), v[2]);
            v[2] = new Complex(4.5d, 9.5d);
            Assert.AreEqual(new Complex(4.5d, 9.5d), v[2]);
            v[0] = new Complex(5.5d, 0.0);
            Assert.AreEqual(new Complex(5.5d, 0.0), v[0]);
            v[2] = new Complex(5.5d, 1.0);
            Assert.AreEqual(new Complex(5.5d, 1.0), v[2]);
            v[1] = new Complex(5.5d, 2);
            Assert.AreEqual(new Complex(5.5d, 2), v[1]);
            v[2] = new Complex(5.5d, 3);
            Assert.AreEqual(new Complex(5.5d, 3), v[2]);
            v[2] = new Complex(5.5d, 4);
            Assert.AreEqual(new Complex(5.5d, 4), v[2]);
            v[0] = new Complex(5.5d, 5);
            Assert.AreEqual(new Complex(5.5d, 5), v[0]);
            v[2] = new Complex(5.5d, 6);
            Assert.AreEqual(new Complex(5.5d, 6), v[2]);
            v[0] = new Complex(5.5d, 7);
            Assert.AreEqual(new Complex(5.5d, 7), v[0]);
            v[1] = new Complex(5.5d, 8);
            Assert.AreEqual(new Complex(5.5d, 8), v[1]);
            v[2] = new Complex(5.5d, 9);
            Assert.AreEqual(new Complex(5.5d, 9), v[2]);
            v[2] = new Complex(5.5d, -1);
            Assert.AreEqual(new Complex(5.5d, -1), v[2]);
            v[2] = new Complex(5.5d, -2);
            Assert.AreEqual(new Complex(5.5d, -2), v[2]);
            v[2] = new Complex(5.5d, -3);
            Assert.AreEqual(new Complex(5.5d, -3), v[2]);
            v[2] = new Complex(5.5d, -4);
            Assert.AreEqual(new Complex(5.5d, -4), v[2]);
            v[0] = new Complex(5.5d, -5);
            Assert.AreEqual(new Complex(5.5d, -5), v[0]);
            v[2] = new Complex(5.5d, -6);
            Assert.AreEqual(new Complex(5.5d, -6), v[2]);
            v[0] = new Complex(5.5d, -7);
            Assert.AreEqual(new Complex(5.5d, -7), v[0]);
            v[0] = new Complex(5.5d, -8);
            Assert.AreEqual(new Complex(5.5d, -8), v[0]);
            v[1] = new Complex(5.5d, -9);
            Assert.AreEqual(new Complex(5.5d, -9), v[1]);
            v[0] = new Complex(5.5d, -9.5d);
            Assert.AreEqual(new Complex(5.5d, -9.5d), v[0]);
            v[0] = new Complex(5.5d, -8.5d);
            Assert.AreEqual(new Complex(5.5d, -8.5d), v[0]);
            v[0] = new Complex(5.5d, -7.5d);
            Assert.AreEqual(new Complex(5.5d, -7.5d), v[0]);
            v[0] = new Complex(5.5d, -6.5d);
            Assert.AreEqual(new Complex(5.5d, -6.5d), v[0]);
            v[2] = new Complex(5.5d, -5.5d);
            Assert.AreEqual(new Complex(5.5d, -5.5d), v[2]);
            v[0] = new Complex(5.5d, -4.5d);
            Assert.AreEqual(new Complex(5.5d, -4.5d), v[0]);
            v[2] = new Complex(5.5d, -3.5d);
            Assert.AreEqual(new Complex(5.5d, -3.5d), v[2]);
            v[1] = new Complex(5.5d, -2.5d);
            Assert.AreEqual(new Complex(5.5d, -2.5d), v[1]);
            v[2] = new Complex(5.5d, -1.5d);
            Assert.AreEqual(new Complex(5.5d, -1.5d), v[2]);
            v[1] = new Complex(5.5d, -0.5d);
            Assert.AreEqual(new Complex(5.5d, -0.5d), v[1]);
            v[1] = new Complex(5.5d, 0.5d);
            Assert.AreEqual(new Complex(5.5d, 0.5d), v[1]);
            v[0] = new Complex(5.5d, 1.5d);
            Assert.AreEqual(new Complex(5.5d, 1.5d), v[0]);
            v[0] = new Complex(5.5d, 2.5d);
            Assert.AreEqual(new Complex(5.5d, 2.5d), v[0]);
            v[0] = new Complex(5.5d, 3.5d);
            Assert.AreEqual(new Complex(5.5d, 3.5d), v[0]);
            v[2] = new Complex(5.5d, 4.5d);
            Assert.AreEqual(new Complex(5.5d, 4.5d), v[2]);
            v[1] = new Complex(5.5d, 5.5d);
            Assert.AreEqual(new Complex(5.5d, 5.5d), v[1]);
            v[2] = new Complex(5.5d, 6.5d);
            Assert.AreEqual(new Complex(5.5d, 6.5d), v[2]);
            v[2] = new Complex(5.5d, 7.5d);
            Assert.AreEqual(new Complex(5.5d, 7.5d), v[2]);
            v[2] = new Complex(5.5d, 8.5d);
            Assert.AreEqual(new Complex(5.5d, 8.5d), v[2]);
            v[0] = new Complex(5.5d, 9.5d);
            Assert.AreEqual(new Complex(5.5d, 9.5d), v[0]);
            v[1] = new Complex(6.5d, 0.0);
            Assert.AreEqual(new Complex(6.5d, 0.0), v[1]);
            v[1] = new Complex(6.5d, 1.0);
            Assert.AreEqual(new Complex(6.5d, 1.0), v[1]);
            v[2] = new Complex(6.5d, 2);
            Assert.AreEqual(new Complex(6.5d, 2), v[2]);
            v[2] = new Complex(6.5d, 3);
            Assert.AreEqual(new Complex(6.5d, 3), v[2]);
            v[0] = new Complex(6.5d, 4);
            Assert.AreEqual(new Complex(6.5d, 4), v[0]);
            v[0] = new Complex(6.5d, 5);
            Assert.AreEqual(new Complex(6.5d, 5), v[0]);
            v[0] = new Complex(6.5d, 6);
            Assert.AreEqual(new Complex(6.5d, 6), v[0]);
            v[0] = new Complex(6.5d, 7);
            Assert.AreEqual(new Complex(6.5d, 7), v[0]);
            v[1] = new Complex(6.5d, 8);
            Assert.AreEqual(new Complex(6.5d, 8), v[1]);
            v[0] = new Complex(6.5d, 9);
            Assert.AreEqual(new Complex(6.5d, 9), v[0]);
            v[1] = new Complex(6.5d, -1);
            Assert.AreEqual(new Complex(6.5d, -1), v[1]);
            v[1] = new Complex(6.5d, -2);
            Assert.AreEqual(new Complex(6.5d, -2), v[1]);
            v[0] = new Complex(6.5d, -3);
            Assert.AreEqual(new Complex(6.5d, -3), v[0]);
            v[2] = new Complex(6.5d, -4);
            Assert.AreEqual(new Complex(6.5d, -4), v[2]);
            v[1] = new Complex(6.5d, -5);
            Assert.AreEqual(new Complex(6.5d, -5), v[1]);
            v[1] = new Complex(6.5d, -6);
            Assert.AreEqual(new Complex(6.5d, -6), v[1]);
            v[2] = new Complex(6.5d, -7);
            Assert.AreEqual(new Complex(6.5d, -7), v[2]);
            v[2] = new Complex(6.5d, -8);
            Assert.AreEqual(new Complex(6.5d, -8), v[2]);
            v[1] = new Complex(6.5d, -9);
            Assert.AreEqual(new Complex(6.5d, -9), v[1]);
            v[2] = new Complex(6.5d, -9.5d);
            Assert.AreEqual(new Complex(6.5d, -9.5d), v[2]);
            v[0] = new Complex(6.5d, -8.5d);
            Assert.AreEqual(new Complex(6.5d, -8.5d), v[0]);
            v[1] = new Complex(6.5d, -7.5d);
            Assert.AreEqual(new Complex(6.5d, -7.5d), v[1]);
            v[0] = new Complex(6.5d, -6.5d);
            Assert.AreEqual(new Complex(6.5d, -6.5d), v[0]);
            v[1] = new Complex(6.5d, -5.5d);
            Assert.AreEqual(new Complex(6.5d, -5.5d), v[1]);
            v[2] = new Complex(6.5d, -4.5d);
            Assert.AreEqual(new Complex(6.5d, -4.5d), v[2]);
            v[2] = new Complex(6.5d, -3.5d);
            Assert.AreEqual(new Complex(6.5d, -3.5d), v[2]);
            v[1] = new Complex(6.5d, -2.5d);
            Assert.AreEqual(new Complex(6.5d, -2.5d), v[1]);
            v[2] = new Complex(6.5d, -1.5d);
            Assert.AreEqual(new Complex(6.5d, -1.5d), v[2]);
            v[0] = new Complex(6.5d, -0.5d);
            Assert.AreEqual(new Complex(6.5d, -0.5d), v[0]);
            v[1] = new Complex(6.5d, 0.5d);
            Assert.AreEqual(new Complex(6.5d, 0.5d), v[1]);
            v[0] = new Complex(6.5d, 1.5d);
            Assert.AreEqual(new Complex(6.5d, 1.5d), v[0]);
            v[2] = new Complex(6.5d, 2.5d);
            Assert.AreEqual(new Complex(6.5d, 2.5d), v[2]);
            v[1] = new Complex(6.5d, 3.5d);
            Assert.AreEqual(new Complex(6.5d, 3.5d), v[1]);
            v[2] = new Complex(6.5d, 4.5d);
            Assert.AreEqual(new Complex(6.5d, 4.5d), v[2]);
            v[2] = new Complex(6.5d, 5.5d);
            Assert.AreEqual(new Complex(6.5d, 5.5d), v[2]);
            v[2] = new Complex(6.5d, 6.5d);
            Assert.AreEqual(new Complex(6.5d, 6.5d), v[2]);
            v[1] = new Complex(6.5d, 7.5d);
            Assert.AreEqual(new Complex(6.5d, 7.5d), v[1]);
            v[1] = new Complex(6.5d, 8.5d);
            Assert.AreEqual(new Complex(6.5d, 8.5d), v[1]);
            v[2] = new Complex(6.5d, 9.5d);
            Assert.AreEqual(new Complex(6.5d, 9.5d), v[2]);
            v[2] = new Complex(7.5d, 0.0);
            Assert.AreEqual(new Complex(7.5d, 0.0), v[2]);
            v[0] = new Complex(7.5d, 1.0);
            Assert.AreEqual(new Complex(7.5d, 1.0), v[0]);
            v[2] = new Complex(7.5d, 2);
            Assert.AreEqual(new Complex(7.5d, 2), v[2]);
            v[0] = new Complex(7.5d, 3);
            Assert.AreEqual(new Complex(7.5d, 3), v[0]);
            v[1] = new Complex(7.5d, 4);
            Assert.AreEqual(new Complex(7.5d, 4), v[1]);
            v[2] = new Complex(7.5d, 5);
            Assert.AreEqual(new Complex(7.5d, 5), v[2]);
            v[0] = new Complex(7.5d, 6);
            Assert.AreEqual(new Complex(7.5d, 6), v[0]);
            v[2] = new Complex(7.5d, 7);
            Assert.AreEqual(new Complex(7.5d, 7), v[2]);
            v[1] = new Complex(7.5d, 8);
            Assert.AreEqual(new Complex(7.5d, 8), v[1]);
            v[1] = new Complex(7.5d, 9);
            Assert.AreEqual(new Complex(7.5d, 9), v[1]);
            v[0] = new Complex(7.5d, -1);
            Assert.AreEqual(new Complex(7.5d, -1), v[0]);
            v[1] = new Complex(7.5d, -2);
            Assert.AreEqual(new Complex(7.5d, -2), v[1]);
            v[0] = new Complex(7.5d, -3);
            Assert.AreEqual(new Complex(7.5d, -3), v[0]);
            v[0] = new Complex(7.5d, -4);
            Assert.AreEqual(new Complex(7.5d, -4), v[0]);
            v[0] = new Complex(7.5d, -5);
            Assert.AreEqual(new Complex(7.5d, -5), v[0]);
            v[0] = new Complex(7.5d, -6);
            Assert.AreEqual(new Complex(7.5d, -6), v[0]);
            v[2] = new Complex(7.5d, -7);
            Assert.AreEqual(new Complex(7.5d, -7), v[2]);
            v[1] = new Complex(7.5d, -8);
            Assert.AreEqual(new Complex(7.5d, -8), v[1]);
            v[0] = new Complex(7.5d, -9);
            Assert.AreEqual(new Complex(7.5d, -9), v[0]);
            v[2] = new Complex(7.5d, -9.5d);
            Assert.AreEqual(new Complex(7.5d, -9.5d), v[2]);
            v[1] = new Complex(7.5d, -8.5d);
            Assert.AreEqual(new Complex(7.5d, -8.5d), v[1]);
            v[1] = new Complex(7.5d, -7.5d);
            Assert.AreEqual(new Complex(7.5d, -7.5d), v[1]);
            v[1] = new Complex(7.5d, -6.5d);
            Assert.AreEqual(new Complex(7.5d, -6.5d), v[1]);
            v[0] = new Complex(7.5d, -5.5d);
            Assert.AreEqual(new Complex(7.5d, -5.5d), v[0]);
            v[2] = new Complex(7.5d, -4.5d);
            Assert.AreEqual(new Complex(7.5d, -4.5d), v[2]);
            v[2] = new Complex(7.5d, -3.5d);
            Assert.AreEqual(new Complex(7.5d, -3.5d), v[2]);
            v[1] = new Complex(7.5d, -2.5d);
            Assert.AreEqual(new Complex(7.5d, -2.5d), v[1]);
            v[2] = new Complex(7.5d, -1.5d);
            Assert.AreEqual(new Complex(7.5d, -1.5d), v[2]);
            v[1] = new Complex(7.5d, -0.5d);
            Assert.AreEqual(new Complex(7.5d, -0.5d), v[1]);
            v[2] = new Complex(7.5d, 0.5d);
            Assert.AreEqual(new Complex(7.5d, 0.5d), v[2]);
            v[2] = new Complex(7.5d, 1.5d);
            Assert.AreEqual(new Complex(7.5d, 1.5d), v[2]);
            v[0] = new Complex(7.5d, 2.5d);
            Assert.AreEqual(new Complex(7.5d, 2.5d), v[0]);
            v[0] = new Complex(7.5d, 3.5d);
            Assert.AreEqual(new Complex(7.5d, 3.5d), v[0]);
            v[2] = new Complex(7.5d, 4.5d);
            Assert.AreEqual(new Complex(7.5d, 4.5d), v[2]);
            v[2] = new Complex(7.5d, 5.5d);
            Assert.AreEqual(new Complex(7.5d, 5.5d), v[2]);
            v[1] = new Complex(7.5d, 6.5d);
            Assert.AreEqual(new Complex(7.5d, 6.5d), v[1]);
            v[0] = new Complex(7.5d, 7.5d);
            Assert.AreEqual(new Complex(7.5d, 7.5d), v[0]);
            v[1] = new Complex(7.5d, 8.5d);
            Assert.AreEqual(new Complex(7.5d, 8.5d), v[1]);
            v[1] = new Complex(7.5d, 9.5d);
            Assert.AreEqual(new Complex(7.5d, 9.5d), v[1]);
            v[2] = new Complex(8.5d, 0.0);
            Assert.AreEqual(new Complex(8.5d, 0.0), v[2]);
            v[2] = new Complex(8.5d, 1.0);
            Assert.AreEqual(new Complex(8.5d, 1.0), v[2]);
            v[2] = new Complex(8.5d, 2);
            Assert.AreEqual(new Complex(8.5d, 2), v[2]);
            v[0] = new Complex(8.5d, 3);
            Assert.AreEqual(new Complex(8.5d, 3), v[0]);
            v[0] = new Complex(8.5d, 4);
            Assert.AreEqual(new Complex(8.5d, 4), v[0]);
            v[0] = new Complex(8.5d, 5);
            Assert.AreEqual(new Complex(8.5d, 5), v[0]);
            v[2] = new Complex(8.5d, 6);
            Assert.AreEqual(new Complex(8.5d, 6), v[2]);
            v[0] = new Complex(8.5d, 7);
            Assert.AreEqual(new Complex(8.5d, 7), v[0]);
            v[2] = new Complex(8.5d, 8);
            Assert.AreEqual(new Complex(8.5d, 8), v[2]);
            v[1] = new Complex(8.5d, 9);
            Assert.AreEqual(new Complex(8.5d, 9), v[1]);
            v[1] = new Complex(8.5d, -1);
            Assert.AreEqual(new Complex(8.5d, -1), v[1]);
            v[2] = new Complex(8.5d, -2);
            Assert.AreEqual(new Complex(8.5d, -2), v[2]);
            v[1] = new Complex(8.5d, -3);
            Assert.AreEqual(new Complex(8.5d, -3), v[1]);
            v[0] = new Complex(8.5d, -4);
            Assert.AreEqual(new Complex(8.5d, -4), v[0]);
            v[2] = new Complex(8.5d, -5);
            Assert.AreEqual(new Complex(8.5d, -5), v[2]);
            v[0] = new Complex(8.5d, -6);
            Assert.AreEqual(new Complex(8.5d, -6), v[0]);
            v[0] = new Complex(8.5d, -7);
            Assert.AreEqual(new Complex(8.5d, -7), v[0]);
            v[2] = new Complex(8.5d, -8);
            Assert.AreEqual(new Complex(8.5d, -8), v[2]);
            v[1] = new Complex(8.5d, -9);
            Assert.AreEqual(new Complex(8.5d, -9), v[1]);
            v[0] = new Complex(8.5d, -9.5d);
            Assert.AreEqual(new Complex(8.5d, -9.5d), v[0]);
            v[2] = new Complex(8.5d, -8.5d);
            Assert.AreEqual(new Complex(8.5d, -8.5d), v[2]);
            v[0] = new Complex(8.5d, -7.5d);
            Assert.AreEqual(new Complex(8.5d, -7.5d), v[0]);
            v[0] = new Complex(8.5d, -6.5d);
            Assert.AreEqual(new Complex(8.5d, -6.5d), v[0]);
            v[0] = new Complex(8.5d, -5.5d);
            Assert.AreEqual(new Complex(8.5d, -5.5d), v[0]);
            v[1] = new Complex(8.5d, -4.5d);
            Assert.AreEqual(new Complex(8.5d, -4.5d), v[1]);
            v[1] = new Complex(8.5d, -3.5d);
            Assert.AreEqual(new Complex(8.5d, -3.5d), v[1]);
            v[2] = new Complex(8.5d, -2.5d);
            Assert.AreEqual(new Complex(8.5d, -2.5d), v[2]);
            v[1] = new Complex(8.5d, -1.5d);
            Assert.AreEqual(new Complex(8.5d, -1.5d), v[1]);
            v[0] = new Complex(8.5d, -0.5d);
            Assert.AreEqual(new Complex(8.5d, -0.5d), v[0]);
            v[0] = new Complex(8.5d, 0.5d);
            Assert.AreEqual(new Complex(8.5d, 0.5d), v[0]);
            v[1] = new Complex(8.5d, 1.5d);
            Assert.AreEqual(new Complex(8.5d, 1.5d), v[1]);
            v[0] = new Complex(8.5d, 2.5d);
            Assert.AreEqual(new Complex(8.5d, 2.5d), v[0]);
            v[1] = new Complex(8.5d, 3.5d);
            Assert.AreEqual(new Complex(8.5d, 3.5d), v[1]);
            v[0] = new Complex(8.5d, 4.5d);
            Assert.AreEqual(new Complex(8.5d, 4.5d), v[0]);
            v[0] = new Complex(8.5d, 5.5d);
            Assert.AreEqual(new Complex(8.5d, 5.5d), v[0]);
            v[2] = new Complex(8.5d, 6.5d);
            Assert.AreEqual(new Complex(8.5d, 6.5d), v[2]);
            v[1] = new Complex(8.5d, 7.5d);
            Assert.AreEqual(new Complex(8.5d, 7.5d), v[1]);
            v[1] = new Complex(8.5d, 8.5d);
            Assert.AreEqual(new Complex(8.5d, 8.5d), v[1]);
            v[0] = new Complex(8.5d, 9.5d);
            Assert.AreEqual(new Complex(8.5d, 9.5d), v[0]);
            v[0] = new Complex(9.5d, 0.0);
            Assert.AreEqual(new Complex(9.5d, 0.0), v[0]);
            v[0] = new Complex(9.5d, 1.0);
            Assert.AreEqual(new Complex(9.5d, 1.0), v[0]);
            v[1] = new Complex(9.5d, 2);
            Assert.AreEqual(new Complex(9.5d, 2), v[1]);
            v[2] = new Complex(9.5d, 3);
            Assert.AreEqual(new Complex(9.5d, 3), v[2]);
            v[1] = new Complex(9.5d, 4);
            Assert.AreEqual(new Complex(9.5d, 4), v[1]);
            v[0] = new Complex(9.5d, 5);
            Assert.AreEqual(new Complex(9.5d, 5), v[0]);
            v[2] = new Complex(9.5d, 6);
            Assert.AreEqual(new Complex(9.5d, 6), v[2]);
            v[1] = new Complex(9.5d, 7);
            Assert.AreEqual(new Complex(9.5d, 7), v[1]);
            v[0] = new Complex(9.5d, 8);
            Assert.AreEqual(new Complex(9.5d, 8), v[0]);
            v[1] = new Complex(9.5d, 9);
            Assert.AreEqual(new Complex(9.5d, 9), v[1]);
            v[2] = new Complex(9.5d, -1);
            Assert.AreEqual(new Complex(9.5d, -1), v[2]);
            v[1] = new Complex(9.5d, -2);
            Assert.AreEqual(new Complex(9.5d, -2), v[1]);
            v[2] = new Complex(9.5d, -3);
            Assert.AreEqual(new Complex(9.5d, -3), v[2]);
            v[2] = new Complex(9.5d, -4);
            Assert.AreEqual(new Complex(9.5d, -4), v[2]);
            v[1] = new Complex(9.5d, -5);
            Assert.AreEqual(new Complex(9.5d, -5), v[1]);
            v[1] = new Complex(9.5d, -6);
            Assert.AreEqual(new Complex(9.5d, -6), v[1]);
            v[1] = new Complex(9.5d, -7);
            Assert.AreEqual(new Complex(9.5d, -7), v[1]);
            v[2] = new Complex(9.5d, -8);
            Assert.AreEqual(new Complex(9.5d, -8), v[2]);
            v[2] = new Complex(9.5d, -9);
            Assert.AreEqual(new Complex(9.5d, -9), v[2]);
            v[2] = new Complex(9.5d, -9.5d);
            Assert.AreEqual(new Complex(9.5d, -9.5d), v[2]);
            v[1] = new Complex(9.5d, -8.5d);
            Assert.AreEqual(new Complex(9.5d, -8.5d), v[1]);
            v[0] = new Complex(9.5d, -7.5d);
            Assert.AreEqual(new Complex(9.5d, -7.5d), v[0]);
            v[1] = new Complex(9.5d, -6.5d);
            Assert.AreEqual(new Complex(9.5d, -6.5d), v[1]);
            v[0] = new Complex(9.5d, -5.5d);
            Assert.AreEqual(new Complex(9.5d, -5.5d), v[0]);
            v[1] = new Complex(9.5d, -4.5d);
            Assert.AreEqual(new Complex(9.5d, -4.5d), v[1]);
            v[0] = new Complex(9.5d, -3.5d);
            Assert.AreEqual(new Complex(9.5d, -3.5d), v[0]);
            v[1] = new Complex(9.5d, -2.5d);
            Assert.AreEqual(new Complex(9.5d, -2.5d), v[1]);
            v[1] = new Complex(9.5d, -1.5d);
            Assert.AreEqual(new Complex(9.5d, -1.5d), v[1]);
            v[1] = new Complex(9.5d, -0.5d);
            Assert.AreEqual(new Complex(9.5d, -0.5d), v[1]);
            v[0] = new Complex(9.5d, 0.5d);
            Assert.AreEqual(new Complex(9.5d, 0.5d), v[0]);
            v[2] = new Complex(9.5d, 1.5d);
            Assert.AreEqual(new Complex(9.5d, 1.5d), v[2]);
            v[2] = new Complex(9.5d, 2.5d);
            Assert.AreEqual(new Complex(9.5d, 2.5d), v[2]);
            v[2] = new Complex(9.5d, 3.5d);
            Assert.AreEqual(new Complex(9.5d, 3.5d), v[2]);
            v[1] = new Complex(9.5d, 4.5d);
            Assert.AreEqual(new Complex(9.5d, 4.5d), v[1]);
            v[1] = new Complex(9.5d, 5.5d);
            Assert.AreEqual(new Complex(9.5d, 5.5d), v[1]);
            v[0] = new Complex(9.5d, 6.5d);
            Assert.AreEqual(new Complex(9.5d, 6.5d), v[0]);
            v[1] = new Complex(9.5d, 7.5d);
            Assert.AreEqual(new Complex(9.5d, 7.5d), v[1]);
            v[1] = new Complex(9.5d, 8.5d);
            Assert.AreEqual(new Complex(9.5d, 8.5d), v[1]);
            v[2] = new Complex(9.5d, 9.5d);
            Assert.AreEqual(new Complex(9.5d, 9.5d), v[2]);
        }

        [Test]
        public void PropertyValues()
        {
            var v = new cvec3(new Complex(-5.5d, -3.5d), new Complex(-4.5d, -3.5d), new Complex(-2, -3.5d));
            var vals = v.Values;
            Assert.AreEqual(new Complex(-5.5d, -3.5d), vals[0]);
            Assert.AreEqual(new Complex(-4.5d, -3.5d), vals[1]);
            Assert.AreEqual(new Complex(-2, -3.5d), vals[2]);
            Assert.That(vals.SequenceEqual(v.ToArray()));
        }

        [Test]
        public void StaticProperties()
        {
            Assert.AreEqual(Complex.Zero, cvec3.Zero.x);
            Assert.AreEqual(Complex.Zero, cvec3.Zero.y);
            Assert.AreEqual(Complex.Zero, cvec3.Zero.z);
            
            Assert.AreEqual(Complex.One, cvec3.Ones.x);
            Assert.AreEqual(Complex.One, cvec3.Ones.y);
            Assert.AreEqual(Complex.One, cvec3.Ones.z);
            
            Assert.AreEqual(Complex.One, cvec3.UnitX.x);
            Assert.AreEqual(Complex.Zero, cvec3.UnitX.y);
            Assert.AreEqual(Complex.Zero, cvec3.UnitX.z);
            
            Assert.AreEqual(Complex.Zero, cvec3.UnitY.x);
            Assert.AreEqual(Complex.One, cvec3.UnitY.y);
            Assert.AreEqual(Complex.Zero, cvec3.UnitY.z);
            
            Assert.AreEqual(Complex.Zero, cvec3.UnitZ.x);
            Assert.AreEqual(Complex.Zero, cvec3.UnitZ.y);
            Assert.AreEqual(Complex.One, cvec3.UnitZ.z);
        }

    }
}
